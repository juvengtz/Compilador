
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CHAR COLON COMMA CTE_CHAR CTE_F CTE_I CTE_S DIV DO ELSE EQ EQUAL FLOAT FOR FUNCTION GEQ GT ID IF INT LEQ LT L_BRACE L_BRACKET L_PAREN MAIN MEDIA MINUS MODA MULT OR PLOTXY PLUS PROGRAM READ REG RETURN R_BRACE R_BRACKET R_PAREN SEMICOLON THEN TO VAR VARIANZA VOID WHILE WRITEPROGRAMA : PROGRAM create_dirfunc ID  SEMICOLON vars2 func2 principalvars : VAR tipo  COLON id_list SEMICOLONvars2 : vars vars2\n             | emptyid_list : id_list COMMA ID addvar array\n               | ID addvar arrayarray : L_BRACKET CTE_I R_BRACKET\n                    | emptytipo : INT current_type\n            | FLOAT current_type\n            | BOOL current_type\n            | CHAR current_typefunc : FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFuncfunc2 : func func2\n             | emptytipo_func : INT current_type\n                 | FLOAT current_type\n                 | CHAR current_type\n                 | BOOL current_type\n                 | VOID current_typeparams : tipo ID addvar updateParams params2\n             | emptyparams2 : COMMA tipo ID addvar updateParams params2\n            | emptyprincipal : MAIN start funcChange L_PAREN R_PAREN bloque endProcbloque : L_BRACE estatuto_rep R_BRACEestatuto_rep : estatuto estatuto_rep \n                     | emptyestatuto : asignacion\n                | condicion\n                | escritura\n                | llamada\n                | retorno\n                | lectura\n                | repeticion\n                | repeticion2asignacion : ID stack_operand_id array EQUAL stack_operator expOr np_asignacion SEMICOLONllamada : ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosubretorno : RETURN L_PAREN expOr np_return R_PAREN SEMICOLONlectura : READ L_PAREN ID np_read R_PAREN SEMICOLONescritura : WRITE L_PAREN escritura_rep R_PAREN SEMICOLONescritura_rep : escritura_rep COMMA escritura_aux\n                      | escritura_auxescritura_aux : CTE_S printString\n                         | expOr np_printcondicion : IF L_PAREN expOr R_PAREN GotoF THEN bloque else_auxelse_aux : ELSE Goto bloque end_if\n                   | end_ifrepeticion : WHILE addJump L_PAREN expOr R_PAREN GotoF bloque end_while repeticion2 : FOR ID EQUAL expOr TO expOr DO bloqueparm : expOr checkParam parm2\n            | emptyparm2 : COMMA expOr checkParam parm2\n            | emptyexpOr : expAnd checkAndOr OR stack_operator expOr\n             | expAnd checkAndOr expAnd : expresion checkAndOr AND stack_operator expAnd\n             | expresion checkAndOrexpresion : exp checkrelop reloprelop : GT stack_operator expresion\n             | LT stack_operator expresion\n             | EQ stack_operator expresion\n             | LEQ stack_operator expresion\n             | GEQ stack_operator expresion\n             | emptyexp : termino checkexp masmenos masmenos : PLUS stack_operator exp\n                | MINUS stack_operator exp\n                | emptytermino : factor checkterm multdivmultdiv : MULT stack_operator termino\n               | DIV stack_operator termino\n               | emptyfactor : L_PAREN fakebottom expOr R_PAREN checkparentesis\n              | var_ctevar_cte : ID stack_operand_id\n                | llamada\n               | CTE_I stack_operand_int\n               | CTE_F stack_operand_float\n               | CTE_CHAR stack_operand_charempty :create_dirfunc :current_type :addvar :addfunc :stack_operand_id :stack_operand_int :stack_operand_float :stack_operand_char :stack_operator :fakebottom :checkparentesis :checkAndOr :checkterm :checkexp :checkrelop :llamadaEra :np_asignacion :np_return :GotoF :Goto :end_if :end_while :addJump :endFunc :updateParams :funcJump :funcChange :np_print :printString :np_read :start :endProc :checkParam :checkParamNum :Gosub :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,60,66,87,],[0,-1,-113,-25,-26,]),'ID':([2,3,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,46,56,61,68,70,71,72,73,74,75,76,77,84,87,91,92,93,94,97,100,101,120,121,122,126,127,128,140,148,149,155,156,158,159,160,161,162,165,166,169,170,172,177,185,186,187,188,189,190,191,192,193,194,195,196,197,203,205,208,220,223,224,226,228,229,230,232,236,237,],[-82,4,-83,-83,-83,-83,35,-83,-83,-83,-83,-83,42,-9,-10,-11,-12,-16,-17,-18,-19,-20,50,63,78,78,-29,-30,-31,-32,-33,-34,-35,-36,96,-26,109,109,109,119,-107,-91,-91,109,109,78,-90,109,109,109,179,109,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-41,109,109,109,109,109,109,109,109,109,109,109,109,-39,-40,-92,109,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'SEMICOLON':([4,41,42,47,50,51,53,58,64,65,103,104,105,106,107,108,109,110,111,112,113,130,131,132,133,134,135,136,137,138,139,157,163,164,167,168,171,174,175,180,183,202,203,207,209,210,211,212,213,214,215,216,217,218,219,224,232,],[5,45,-84,-81,-84,-6,-8,-81,-5,-7,-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,-56,-58,-81,-81,-81,-76,-78,-79,-80,172,-59,-65,-66,-69,-70,-73,196,197,-98,-92,223,-92,-74,-55,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,-116,-38,]),'VAR':([5,7,45,62,],[9,9,-2,9,]),'FUNCTION':([5,6,7,8,11,14,45,178,200,],[-81,13,-81,-4,13,-3,-2,-105,-13,]),'MAIN':([5,6,7,8,10,11,12,14,22,45,178,200,],[-81,-81,-81,-4,21,-81,-15,-3,-14,-2,-105,-13,]),'L_BRACE':([7,8,14,45,54,62,85,176,184,198,221,227,234,],[-81,-4,-3,-2,61,-81,97,-100,61,61,61,-101,61,]),'INT':([9,13,49,124,],[16,24,16,16,]),'FLOAT':([9,13,49,124,],[17,25,17,17,]),'BOOL':([9,13,49,124,],[18,27,18,18,]),'CHAR':([9,13,49,124,],[19,26,19,19,]),'VOID':([13,],[28,]),'COLON':([15,16,17,18,19,30,31,32,33,],[29,-83,-83,-83,-83,-9,-10,-11,-12,]),'L_PAREN':([21,34,35,43,44,78,79,80,81,82,83,90,91,92,93,95,100,101,109,120,121,126,127,128,140,149,155,156,158,159,160,161,162,165,166,169,170,177,185,186,187,188,189,190,191,192,193,194,195,205,],[-112,-108,-85,48,49,-97,91,92,93,94,-104,100,101,101,101,120,-91,-91,-97,101,101,-90,101,101,101,101,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'COMMA':([41,42,47,50,51,53,58,63,64,65,86,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,131,132,133,134,135,136,137,138,141,142,151,157,163,164,167,168,171,173,179,182,183,201,203,207,209,210,211,212,213,214,215,216,217,218,219,222,224,225,232,233,],[46,-84,-81,-84,-6,-8,-81,-84,-5,-7,-106,124,-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,140,-43,-110,-109,-56,-58,-81,-81,-81,-76,-78,-79,-80,-44,-45,-114,-59,-65,-66,-69,-70,-73,-42,-84,205,-92,-106,-92,-74,-55,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,124,-116,-114,-38,205,]),'L_BRACKET':([42,47,50,58,78,89,],[-84,52,-84,52,-86,52,]),'R_PAREN':([48,49,55,57,63,86,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,125,127,130,131,132,133,134,135,136,137,138,141,142,143,144,145,150,151,152,153,157,163,164,167,168,171,173,179,181,182,183,201,203,204,206,207,209,210,211,212,213,214,215,216,217,218,219,222,224,225,231,232,233,235,],[54,-81,62,-22,-84,-106,-81,-91,129,-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,139,-43,-110,-109,-99,-111,-21,-24,-81,-56,-58,-81,-81,-81,-76,-78,-79,-80,-44,-45,174,175,176,-115,-114,-52,183,-59,-65,-66,-69,-70,-73,-42,-84,203,-81,-92,-106,-92,-51,-54,-74,-55,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,-81,-116,-114,-23,-38,-81,-53,]),'CTE_I':([52,91,92,93,100,101,120,121,126,127,128,140,149,155,156,158,159,160,161,162,165,166,169,170,177,185,186,187,188,189,190,191,192,193,194,195,205,],[59,111,111,111,-91,-91,111,111,-90,111,111,111,111,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'EQUAL':([53,65,78,89,96,99,],[-8,-7,-86,-81,121,126,]),'R_BRACKET':([59,],[65,]),'R_BRACE':([61,67,68,69,70,71,72,73,74,75,76,77,87,88,97,122,147,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[-81,87,-81,-28,-29,-30,-31,-32,-33,-34,-35,-36,-26,-27,-107,-81,178,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'IF':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[79,79,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,79,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'WRITE':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[80,80,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,80,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'RETURN':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[81,81,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,81,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'READ':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[82,82,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,82,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'WHILE':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[83,83,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,83,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'FOR':([61,68,70,71,72,73,74,75,76,77,87,97,122,172,196,197,203,208,220,223,224,226,228,229,230,232,236,237,],[84,84,-29,-30,-31,-32,-33,-34,-35,-36,-26,-107,84,-41,-39,-40,-92,-102,-103,-37,-116,-46,-48,-49,-50,-38,-102,-47,]),'ELSE':([87,208,],[-26,227,]),'CTE_F':([91,92,93,100,101,120,121,126,127,128,140,149,155,156,158,159,160,161,162,165,166,169,170,177,185,186,187,188,189,190,191,192,193,194,195,205,],[112,112,112,-91,-91,112,112,-90,112,112,112,112,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'CTE_CHAR':([91,92,93,100,101,120,121,126,127,128,140,149,155,156,158,159,160,161,162,165,166,169,170,177,185,186,187,188,189,190,191,192,193,194,195,205,],[113,113,113,-91,-91,113,113,-90,113,113,113,113,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,-90,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'CTE_S':([92,140,],[116,116,]),'OR':([103,104,105,106,107,108,109,110,111,112,113,130,131,132,133,134,135,136,137,138,157,163,164,167,168,171,183,203,207,210,211,212,213,214,215,216,217,218,219,224,232,],[-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,155,-58,-81,-81,-81,-76,-78,-79,-80,-59,-65,-66,-69,-70,-73,-92,-92,-74,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,-116,-38,]),'TO':([103,104,105,106,107,108,109,110,111,112,113,130,131,132,133,134,135,136,137,138,146,157,163,164,167,168,171,183,203,207,209,210,211,212,213,214,215,216,217,218,219,224,232,],[-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,-56,-58,-81,-81,-81,-76,-78,-79,-80,177,-59,-65,-66,-69,-70,-73,-92,-92,-74,-55,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,-116,-38,]),'DO':([103,104,105,106,107,108,109,110,111,112,113,130,131,132,133,134,135,136,137,138,157,163,164,167,168,171,183,199,203,207,209,210,211,212,213,214,215,216,217,218,219,224,232,],[-93,-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,-56,-58,-81,-81,-81,-76,-78,-79,-80,-59,-65,-66,-69,-70,-73,-92,221,-92,-74,-55,-57,-60,-61,-62,-63,-64,-67,-68,-71,-72,-116,-38,]),'AND':([104,105,106,107,108,109,110,111,112,113,131,132,133,134,135,136,137,138,157,163,164,167,168,171,183,203,207,211,212,213,214,215,216,217,218,219,224,232,],[-93,-96,-95,-94,-75,-86,-77,-87,-88,-89,156,-81,-81,-81,-76,-78,-79,-80,-59,-65,-66,-69,-70,-73,-92,-92,-74,-60,-61,-62,-63,-64,-67,-68,-71,-72,-116,-38,]),'GT':([105,106,107,108,109,110,111,112,113,132,133,134,135,136,137,138,164,167,168,171,183,203,207,216,217,218,219,224,232,],[-96,-95,-94,-75,-86,-77,-87,-88,-89,158,-81,-81,-76,-78,-79,-80,-66,-69,-70,-73,-92,-92,-74,-67,-68,-71,-72,-116,-38,]),'LT':([105,106,107,108,109,110,111,112,113,132,133,134,135,136,137,138,164,167,168,171,183,203,207,216,217,218,219,224,232,],[-96,-95,-94,-75,-86,-77,-87,-88,-89,159,-81,-81,-76,-78,-79,-80,-66,-69,-70,-73,-92,-92,-74,-67,-68,-71,-72,-116,-38,]),'EQ':([105,106,107,108,109,110,111,112,113,132,133,134,135,136,137,138,164,167,168,171,183,203,207,216,217,218,219,224,232,],[-96,-95,-94,-75,-86,-77,-87,-88,-89,160,-81,-81,-76,-78,-79,-80,-66,-69,-70,-73,-92,-92,-74,-67,-68,-71,-72,-116,-38,]),'LEQ':([105,106,107,108,109,110,111,112,113,132,133,134,135,136,137,138,164,167,168,171,183,203,207,216,217,218,219,224,232,],[-96,-95,-94,-75,-86,-77,-87,-88,-89,161,-81,-81,-76,-78,-79,-80,-66,-69,-70,-73,-92,-92,-74,-67,-68,-71,-72,-116,-38,]),'GEQ':([105,106,107,108,109,110,111,112,113,132,133,134,135,136,137,138,164,167,168,171,183,203,207,216,217,218,219,224,232,],[-96,-95,-94,-75,-86,-77,-87,-88,-89,162,-81,-81,-76,-78,-79,-80,-66,-69,-70,-73,-92,-92,-74,-67,-68,-71,-72,-116,-38,]),'PLUS':([106,107,108,109,110,111,112,113,133,134,135,136,137,138,168,171,183,203,207,218,219,224,232,],[-95,-94,-75,-86,-77,-87,-88,-89,165,-81,-76,-78,-79,-80,-70,-73,-92,-92,-74,-71,-72,-116,-38,]),'MINUS':([106,107,108,109,110,111,112,113,133,134,135,136,137,138,168,171,183,203,207,218,219,224,232,],[-95,-94,-75,-86,-77,-87,-88,-89,166,-81,-76,-78,-79,-80,-70,-73,-92,-92,-74,-71,-72,-116,-38,]),'MULT':([107,108,109,110,111,112,113,134,135,136,137,138,183,203,207,224,232,],[-94,-75,-86,-77,-87,-88,-89,169,-76,-78,-79,-80,-92,-92,-74,-116,-38,]),'DIV':([107,108,109,110,111,112,113,134,135,136,137,138,183,203,207,224,232,],[-94,-75,-86,-77,-87,-88,-89,170,-76,-78,-79,-80,-92,-92,-74,-116,-38,]),'THEN':([129,154,],[-100,184,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'create_dirfunc':([2,],[3,]),'vars2':([5,7,62,],[6,14,85,]),'vars':([5,7,62,],[7,7,7,]),'empty':([5,6,7,11,47,49,58,61,62,68,89,98,122,127,132,133,134,182,222,233,],[8,12,8,12,53,57,53,69,8,69,53,125,69,152,163,167,171,206,125,206,]),'func2':([6,11,],[10,22,]),'func':([6,11,],[11,11,]),'tipo':([9,49,124,],[15,56,148,]),'principal':([10,],[20,]),'tipo_func':([13,],[23,]),'current_type':([16,17,18,19,24,25,26,27,28,],[30,31,32,33,36,37,38,39,40,]),'start':([21,],[34,]),'id_list':([29,],[41,]),'funcChange':([34,],[43,]),'addfunc':([35,],[44,]),'addvar':([42,50,63,179,],[47,58,86,201,]),'array':([47,58,89,],[51,64,99,]),'params':([49,],[55,]),'bloque':([54,184,198,221,234,],[60,208,220,230,236,]),'endProc':([60,],[66,]),'estatuto_rep':([61,68,122,],[67,88,147,]),'estatuto':([61,68,122,],[68,68,68,]),'asignacion':([61,68,122,],[70,70,70,]),'condicion':([61,68,122,],[71,71,71,]),'escritura':([61,68,122,],[72,72,72,]),'llamada':([61,68,91,92,93,120,121,122,127,128,140,149,177,185,186,187,188,189,190,191,192,193,194,195,205,],[73,73,110,110,110,110,110,73,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'retorno':([61,68,122,],[74,74,74,]),'lectura':([61,68,122,],[75,75,75,]),'repeticion':([61,68,122,],[76,76,76,]),'repeticion2':([61,68,122,],[77,77,77,]),'stack_operand_id':([78,109,],[89,135,]),'llamadaEra':([78,109,],[90,90,]),'addJump':([83,],[95,]),'updateParams':([86,201,],[98,222,]),'expOr':([91,92,93,120,121,127,128,140,149,177,185,205,],[102,117,118,145,146,151,153,117,180,199,209,225,]),'expAnd':([91,92,93,120,121,127,128,140,149,177,185,186,205,],[103,103,103,103,103,103,103,103,103,103,103,210,103,]),'expresion':([91,92,93,120,121,127,128,140,149,177,185,186,187,188,189,190,191,205,],[104,104,104,104,104,104,104,104,104,104,104,104,211,212,213,214,215,104,]),'exp':([91,92,93,120,121,127,128,140,149,177,185,186,187,188,189,190,191,192,193,205,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,216,217,105,]),'termino':([91,92,93,120,121,127,128,140,149,177,185,186,187,188,189,190,191,192,193,194,195,205,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,218,219,106,]),'factor':([91,92,93,120,121,127,128,140,149,177,185,186,187,188,189,190,191,192,193,194,195,205,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'var_cte':([91,92,93,120,121,127,128,140,149,177,185,186,187,188,189,190,191,192,193,194,195,205,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'escritura_rep':([92,],[114,]),'escritura_aux':([92,140,],[115,173,]),'funcJump':([97,],[122,]),'params2':([98,222,],[123,231,]),'fakebottom':([100,101,],[127,128,]),'checkAndOr':([103,104,],[130,131,]),'checkrelop':([105,],[132,]),'checkexp':([106,],[133,]),'checkterm':([107,],[134,]),'stack_operand_int':([111,],[136,]),'stack_operand_float':([112,],[137,]),'stack_operand_char':([113,],[138,]),'printString':([116,],[141,]),'np_print':([117,],[142,]),'np_return':([118,],[143,]),'np_read':([119,],[144,]),'stack_operator':([126,155,156,158,159,160,161,162,165,166,169,170,],[149,185,186,187,188,189,190,191,192,193,194,195,]),'parm':([127,],[150,]),'GotoF':([129,176,],[154,198,]),'relop':([132,],[157,]),'masmenos':([133,],[164,]),'multdiv':([134,],[168,]),'checkParamNum':([150,],[181,]),'checkParam':([151,225,],[182,233,]),'endFunc':([178,],[200,]),'np_asignacion':([180,],[202,]),'parm2':([182,233,],[204,235,]),'checkparentesis':([183,203,],[207,224,]),'else_aux':([208,],[226,]),'end_if':([208,236,],[228,237,]),'end_while':([220,],[229,]),'Gosub':([224,],[232,]),'Goto':([227,],[234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 principal','PROGRAMA',7,'p_programa','Yacc.py',9),
  ('vars -> VAR tipo COLON id_list SEMICOLON','vars',5,'p_vars','Yacc.py',13),
  ('vars2 -> vars vars2','vars2',2,'p_vars2','Yacc.py',16),
  ('vars2 -> empty','vars2',1,'p_vars2','Yacc.py',17),
  ('id_list -> id_list COMMA ID addvar array','id_list',5,'p_id_list','Yacc.py',21),
  ('id_list -> ID addvar array','id_list',3,'p_id_list','Yacc.py',22),
  ('array -> L_BRACKET CTE_I R_BRACKET','array',3,'p_array','Yacc.py',26),
  ('array -> empty','array',1,'p_array','Yacc.py',27),
  ('tipo -> INT current_type','tipo',2,'p_tipo','Yacc.py',31),
  ('tipo -> FLOAT current_type','tipo',2,'p_tipo','Yacc.py',32),
  ('tipo -> BOOL current_type','tipo',2,'p_tipo','Yacc.py',33),
  ('tipo -> CHAR current_type','tipo',2,'p_tipo','Yacc.py',34),
  ('func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc','func',13,'p_func','Yacc.py',38),
  ('func2 -> func func2','func2',2,'p_func2','Yacc.py',41),
  ('func2 -> empty','func2',1,'p_func2','Yacc.py',42),
  ('tipo_func -> INT current_type','tipo_func',2,'p_tipo_func','Yacc.py',45),
  ('tipo_func -> FLOAT current_type','tipo_func',2,'p_tipo_func','Yacc.py',46),
  ('tipo_func -> CHAR current_type','tipo_func',2,'p_tipo_func','Yacc.py',47),
  ('tipo_func -> BOOL current_type','tipo_func',2,'p_tipo_func','Yacc.py',48),
  ('tipo_func -> VOID current_type','tipo_func',2,'p_tipo_func','Yacc.py',49),
  ('params -> tipo ID addvar updateParams params2','params',5,'p_params','Yacc.py',53),
  ('params -> empty','params',1,'p_params','Yacc.py',54),
  ('params2 -> COMMA tipo ID addvar updateParams params2','params2',6,'p_params2','Yacc.py',57),
  ('params2 -> empty','params2',1,'p_params2','Yacc.py',58),
  ('principal -> MAIN start funcChange L_PAREN R_PAREN bloque endProc','principal',7,'p_principal','Yacc.py',62),
  ('bloque -> L_BRACE estatuto_rep R_BRACE','bloque',3,'p_bloque','Yacc.py',65),
  ('estatuto_rep -> estatuto estatuto_rep','estatuto_rep',2,'p_estatuto_rep','Yacc.py',69),
  ('estatuto_rep -> empty','estatuto_rep',1,'p_estatuto_rep','Yacc.py',70),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Yacc.py',74),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Yacc.py',75),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Yacc.py',76),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','Yacc.py',77),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','Yacc.py',78),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Yacc.py',79),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','Yacc.py',80),
  ('estatuto -> repeticion2','estatuto',1,'p_estatuto','Yacc.py',81),
  ('asignacion -> ID stack_operand_id array EQUAL stack_operator expOr np_asignacion SEMICOLON','asignacion',8,'p_asignacion','Yacc.py',85),
  ('llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub','llamada',9,'p_llamada','Yacc.py',89),
  ('retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON','retorno',6,'p_retorno','Yacc.py',103),
  ('lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON','lectura',6,'p_lectura','Yacc.py',107),
  ('escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON','escritura',5,'p_escritura','Yacc.py',111),
  ('escritura_rep -> escritura_rep COMMA escritura_aux','escritura_rep',3,'p_escritura_rep','Yacc.py',115),
  ('escritura_rep -> escritura_aux','escritura_rep',1,'p_escritura_rep','Yacc.py',116),
  ('escritura_aux -> CTE_S printString','escritura_aux',2,'p_escritura_aux','Yacc.py',120),
  ('escritura_aux -> expOr np_print','escritura_aux',2,'p_escritura_aux','Yacc.py',121),
  ('condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux','condicion',8,'p_condicion','Yacc.py',125),
  ('else_aux -> ELSE Goto bloque end_if','else_aux',4,'p_else_aux','Yacc.py',129),
  ('else_aux -> end_if','else_aux',1,'p_else_aux','Yacc.py',130),
  ('repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF bloque end_while','repeticion',8,'p_repeticion','Yacc.py',134),
  ('repeticion2 -> FOR ID EQUAL expOr TO expOr DO bloque','repeticion2',8,'p_repeticion2','Yacc.py',137),
  ('parm -> expOr checkParam parm2','parm',3,'p_parm','Yacc.py',140),
  ('parm -> empty','parm',1,'p_parm','Yacc.py',141),
  ('parm2 -> COMMA expOr checkParam parm2','parm2',4,'p_parm2','Yacc.py',144),
  ('parm2 -> empty','parm2',1,'p_parm2','Yacc.py',145),
  ('expOr -> expAnd checkAndOr OR stack_operator expOr','expOr',5,'p_expOr','Yacc.py',148),
  ('expOr -> expAnd checkAndOr','expOr',2,'p_expOr','Yacc.py',149),
  ('expAnd -> expresion checkAndOr AND stack_operator expAnd','expAnd',5,'p_expAnd','Yacc.py',152),
  ('expAnd -> expresion checkAndOr','expAnd',2,'p_expAnd','Yacc.py',153),
  ('expresion -> exp checkrelop relop','expresion',3,'p_expresion','Yacc.py',156),
  ('relop -> GT stack_operator expresion','relop',3,'p_relop','Yacc.py',160),
  ('relop -> LT stack_operator expresion','relop',3,'p_relop','Yacc.py',161),
  ('relop -> EQ stack_operator expresion','relop',3,'p_relop','Yacc.py',162),
  ('relop -> LEQ stack_operator expresion','relop',3,'p_relop','Yacc.py',163),
  ('relop -> GEQ stack_operator expresion','relop',3,'p_relop','Yacc.py',164),
  ('relop -> empty','relop',1,'p_relop','Yacc.py',165),
  ('exp -> termino checkexp masmenos','exp',3,'p_exp','Yacc.py',169),
  ('masmenos -> PLUS stack_operator exp','masmenos',3,'p_masmenos','Yacc.py',173),
  ('masmenos -> MINUS stack_operator exp','masmenos',3,'p_masmenos','Yacc.py',174),
  ('masmenos -> empty','masmenos',1,'p_masmenos','Yacc.py',175),
  ('termino -> factor checkterm multdiv','termino',3,'p_termino','Yacc.py',178),
  ('multdiv -> MULT stack_operator termino','multdiv',3,'p_multdiv','Yacc.py',182),
  ('multdiv -> DIV stack_operator termino','multdiv',3,'p_multdiv','Yacc.py',183),
  ('multdiv -> empty','multdiv',1,'p_multdiv','Yacc.py',184),
  ('factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis','factor',5,'p_factor','Yacc.py',188),
  ('factor -> var_cte','factor',1,'p_factor','Yacc.py',189),
  ('var_cte -> ID stack_operand_id','var_cte',2,'p_var_cte','Yacc.py',193),
  ('var_cte -> llamada','var_cte',1,'p_var_cte','Yacc.py',194),
  ('var_cte -> CTE_I stack_operand_int','var_cte',2,'p_var_cte','Yacc.py',195),
  ('var_cte -> CTE_F stack_operand_float','var_cte',2,'p_var_cte','Yacc.py',196),
  ('var_cte -> CTE_CHAR stack_operand_char','var_cte',2,'p_var_cte','Yacc.py',197),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',201),
  ('create_dirfunc -> <empty>','create_dirfunc',0,'p_create_dirfunc','Yacc.py',267),
  ('current_type -> <empty>','current_type',0,'p_current_type','Yacc.py',274),
  ('addvar -> <empty>','addvar',0,'p_addvar','Yacc.py',280),
  ('addfunc -> <empty>','addfunc',0,'p_addfunc','Yacc.py',295),
  ('stack_operand_id -> <empty>','stack_operand_id',0,'p_stack_operand_id','Yacc.py',438),
  ('stack_operand_int -> <empty>','stack_operand_int',0,'p_stack_operand_int','Yacc.py',458),
  ('stack_operand_float -> <empty>','stack_operand_float',0,'p_stack_operand_float','Yacc.py',469),
  ('stack_operand_char -> <empty>','stack_operand_char',0,'p_stack_operand_char','Yacc.py',479),
  ('stack_operator -> <empty>','stack_operator',0,'p_stack_operator','Yacc.py',488),
  ('fakebottom -> <empty>','fakebottom',0,'p_fakebottom','Yacc.py',494),
  ('checkparentesis -> <empty>','checkparentesis',0,'p_checkparentesis','Yacc.py',499),
  ('checkAndOr -> <empty>','checkAndOr',0,'p_checkAndOr','Yacc.py',508),
  ('checkterm -> <empty>','checkterm',0,'p_checkterm','Yacc.py',527),
  ('checkexp -> <empty>','checkexp',0,'p_checkexp','Yacc.py',547),
  ('checkrelop -> <empty>','checkrelop',0,'p_checkrelop','Yacc.py',567),
  ('llamadaEra -> <empty>','llamadaEra',0,'p_llamdaEra','Yacc.py',589),
  ('np_asignacion -> <empty>','np_asignacion',0,'p_np_asignacion','Yacc.py',600),
  ('np_return -> <empty>','np_return',0,'p_np_return','Yacc.py',620),
  ('GotoF -> <empty>','GotoF',0,'p_GotoF','Yacc.py',634),
  ('Goto -> <empty>','Goto',0,'p_Goto','Yacc.py',645),
  ('end_if -> <empty>','end_if',0,'p_end_if','Yacc.py',653),
  ('end_while -> <empty>','end_while',0,'p_end_while','Yacc.py',659),
  ('addJump -> <empty>','addJump',0,'p_addJump','Yacc.py',667),
  ('endFunc -> <empty>','endFunc',0,'p_endFunc','Yacc.py',673),
  ('updateParams -> <empty>','updateParams',0,'p_updateParams','Yacc.py',688),
  ('funcJump -> <empty>','funcJump',0,'p_funcJump','Yacc.py',696),
  ('funcChange -> <empty>','funcChange',0,'p_funcChange','Yacc.py',703),
  ('np_print -> <empty>','np_print',0,'p_np_print','Yacc.py',708),
  ('printString -> <empty>','printString',0,'p_printString','Yacc.py',714),
  ('np_read -> <empty>','np_read',0,'p_np_read','Yacc.py',721),
  ('start -> <empty>','start',0,'p_start','Yacc.py',732),
  ('endProc -> <empty>','endProc',0,'p_endProc','Yacc.py',739),
  ('checkParam -> <empty>','checkParam',0,'p_checkParam','Yacc.py',744),
  ('checkParamNum -> <empty>','checkParamNum',0,'p_checkParamNum','Yacc.py',758),
  ('Gosub -> <empty>','Gosub',0,'p_Gosub','Yacc.py',765),
]
