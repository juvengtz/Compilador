
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL CHAR COLON COMMA CTE_CHAR CTE_F CTE_I CTE_S DIV DO ELSE EQ EQUAL FLOAT FOR FUNCTION GEQ GT ID IF INT LEQ LT L_BRACE L_BRACKET L_PAREN MEDIA MINUS MODA MULT PLOTXY PLUS PROGRAM READ REG RETURN R_BRACE R_BRACKET R_PAREN SEMICOLON TO VAR VARIANZA VOID WHILE WRITEPROGRAMA : PROGRAM create_dirfunc ID  SEMICOLON vars2 func2 bloquevars : VAR tipo  COLON id_list SEMICOLONvars2 : vars vars2\n             | emptyid_list : id_list COMMA ID addvar array\n               | ID addvar arrayarray : L_BRACKET CTE_I R_BRACKET\n                    | emptytipo : INT current_type\n            | FLOAT current_type\n            | BOOL current_type\n            | CHAR current_typefunc : FUNCTION tipo_func ID addfunc L_PAREN parms R_PAREN vars2 bloque endProcfunc2 : func func2\n             | emptytipo_func : INT current_type\n                 | FLOAT current_type\n                 | CHAR current_type\n                 | BOOL current_type\n                 | VOID current_typeparms : tipo ID id_list\n             | emptybloque : L_BRACE estatuto_rep R_BRACEestatuto_rep : estatuto_rep estatuto\n                     | estatutoestatuto : asignacion\n                | condicion\n                | escritura\n                | llamada\n                | retorno\n                | lectura\n                | repeticionasignacion : ID stack_operand_id array EQUAL stack_operator expresion np_asignacion SEMICOLONllamada : ID L_PAREN exp_rep R_PAREN np_llamada SEMICOLONexp_rep : exp_rep COMMA expresion\n                | expresionretorno : RETURN L_PAREN expresion R_PAREN return SEMICOLONlectura : READ L_PAREN id_list R_PAREN SEMICOLONescritura : WRITE L_PAREN escritura_rep R_PAREN SEMICOLONescritura_rep : escritura_rep COMMA escritura_aux\n                      | escritura_auxescritura_aux : CTE_S\n                         | expresioncondicion : IF L_PAREN expresion R_PAREN GotoF bloque else_auxelse_aux : ELSE Goto bloque end_if\n                   | end_ifrepeticion : WHILE addJump L_PAREN expresion R_PAREN GotoF bloque end_whileexpresion : exp checkrelop reloprelop : GT stack_operator expresion\n             | LT stack_operator expresion\n             | EQ stack_operator expresion\n             | LEQ stack_operator expresion\n             | GEQ stack_operator expresion\n             | emptyexp : termino checkexp masmenos masmenos : PLUS stack_operator exp\n                | MINUS stack_operator exp\n                | emptytermino : factor checkterm multdivmultdiv : MULT stack_operator termino\n               | DIV stack_operator termino\n               | emptyfactor : L_PAREN fakebottom expresion R_PAREN checkparentesis\n              | var_ctevar_cte : ID stack_operand_id\n               | CTE_I stack_operand_int\n               | CTE_F stack_operand_float\n               | CTE_CHAR stack_operand_charempty :create_dirfunc :current_type :addvar :addfunc :stack_operand_id :stack_operand_int :stack_operand_float :stack_operand_char :stack_operator :fakebottom :checkparentesis :checkterm :checkexp :checkrelop :np_llamada :np_asignacion :return :GotoF :Goto :end_if :end_while :addJump :endProc :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,57,],[0,-1,-23,]),'ID':([2,3,16,17,18,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,50,51,52,53,54,57,58,60,61,62,63,64,68,74,91,95,98,100,109,114,117,123,124,125,126,127,130,131,134,135,138,141,144,148,149,150,151,152,153,154,155,156,157,158,159,174,176,177,179,181,183,184,],[-70,4,-71,-71,-71,-71,43,49,-71,-71,-71,-71,-71,56,-9,-10,-11,-12,43,-25,-26,-27,-28,-29,-30,-31,-32,-16,-17,-18,-19,-20,-23,-24,73,73,73,73,56,93,-79,73,-78,73,73,73,144,73,-78,-78,-78,-78,-78,-78,-78,-78,-78,-39,-38,56,-34,73,73,73,73,73,73,73,73,73,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'SEMICOLON':([4,55,56,69,72,73,77,78,79,80,81,82,83,93,94,97,99,101,102,103,104,105,106,108,110,111,116,118,120,122,128,129,132,133,136,140,145,146,147,163,164,165,166,167,168,169,170,171,172,173,],[5,67,-72,-69,-8,-74,-83,-82,-81,-64,-75,-76,-77,-72,-6,-65,-84,-69,-69,-69,-66,-67,-68,138,-86,141,-69,-7,148,-48,-54,-55,-58,-59,-62,159,-5,-85,-80,179,-63,-49,-50,-51,-52,-53,-56,-57,-60,-61,]),'VAR':([5,7,67,143,],[9,9,-2,9,]),'FUNCTION':([5,6,7,8,11,14,57,67,178,182,],[-69,13,-69,-4,13,-3,-23,-2,-92,-13,]),'L_BRACE':([5,6,7,8,10,11,12,14,22,57,67,107,137,142,143,160,161,175,178,180,182,],[-69,-69,-69,-4,21,-69,-15,-3,-14,-23,-2,-87,21,-87,-69,21,21,-88,-92,21,-13,]),'INT':([9,13,92,],[16,24,16,]),'FLOAT':([9,13,92,],[17,25,17,]),'BOOL':([9,13,92,],[18,27,18,]),'CHAR':([9,13,92,],[19,26,19,]),'VOID':([13,],[28,]),'COLON':([15,16,17,18,19,30,31,32,33,],[29,-71,-71,-71,-71,-9,-10,-11,-12,]),'IF':([21,34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[44,44,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'WRITE':([21,34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[45,45,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'RETURN':([21,34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[46,46,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'READ':([21,34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[47,47,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'WHILE':([21,34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[48,48,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'R_BRACE':([34,35,36,37,38,39,40,41,42,57,58,138,141,148,158,159,174,176,177,179,181,183,184,],[57,-25,-26,-27,-28,-29,-30,-31,-32,-23,-24,-39,-38,-34,-89,-37,-44,-46,-90,-33,-47,-89,-45,]),'L_PAREN':([43,44,45,46,47,48,49,60,61,62,63,65,66,74,91,95,98,100,109,117,123,124,125,126,127,130,131,134,135,149,150,151,152,153,154,155,156,157,],[60,61,62,63,64,-91,-73,74,74,74,74,91,92,-79,74,-78,74,74,74,74,-78,-78,-78,-78,-78,-78,-78,-78,-78,74,74,74,74,74,74,74,74,74,]),'L_BRACKET':([43,56,59,69,93,116,],[-74,-72,71,71,-72,71,]),'EQUAL':([43,59,70,72,118,],[-74,-69,95,-8,-7,]),'COMMA':([55,56,69,72,73,75,76,77,78,79,80,81,82,83,85,86,87,88,90,93,94,97,101,102,103,104,105,106,116,118,121,122,128,129,132,133,136,139,145,147,162,164,165,166,167,168,169,170,171,172,173,],[68,-72,-69,-8,-74,100,-36,-83,-82,-81,-64,-75,-76,-77,109,-41,-42,-43,68,-72,-6,-65,-69,-69,-69,-66,-67,-68,-69,-7,-35,-48,-54,-55,-58,-59,-62,-40,-5,-80,68,-63,-49,-50,-51,-52,-53,-56,-57,-60,-61,]),'R_PAREN':([56,69,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,97,101,102,103,104,105,106,112,113,115,116,118,119,121,122,128,129,132,133,136,139,145,147,162,164,165,166,167,168,169,170,171,172,173,],[-72,-69,-8,-74,99,-36,-83,-82,-81,-64,-75,-76,-77,107,108,-41,-42,-43,110,111,-69,-72,-6,-65,-69,-69,-69,-66,-67,-68,142,143,-22,-69,-7,147,-35,-48,-54,-55,-58,-59,-62,-40,-5,-80,-21,-63,-49,-50,-51,-52,-53,-56,-57,-60,-61,]),'ELSE':([57,158,],[-23,175,]),'CTE_I':([60,61,62,63,71,74,91,95,98,100,109,117,123,124,125,126,127,130,131,134,135,149,150,151,152,153,154,155,156,157,],[81,81,81,81,96,-79,81,-78,81,81,81,81,-78,-78,-78,-78,-78,-78,-78,-78,-78,81,81,81,81,81,81,81,81,81,]),'CTE_F':([60,61,62,63,74,91,95,98,100,109,117,123,124,125,126,127,130,131,134,135,149,150,151,152,153,154,155,156,157,],[82,82,82,82,-79,82,-78,82,82,82,82,-78,-78,-78,-78,-78,-78,-78,-78,-78,82,82,82,82,82,82,82,82,82,]),'CTE_CHAR':([60,61,62,63,74,91,95,98,100,109,117,123,124,125,126,127,130,131,134,135,149,150,151,152,153,154,155,156,157,],[83,83,83,83,-79,83,-78,83,83,83,83,-78,-78,-78,-78,-78,-78,-78,-78,-78,83,83,83,83,83,83,83,83,83,]),'CTE_S':([62,109,],[87,87,]),'MULT':([73,79,80,81,82,83,97,103,104,105,106,147,164,],[-74,-81,-64,-75,-76,-77,-65,134,-66,-67,-68,-80,-63,]),'DIV':([73,79,80,81,82,83,97,103,104,105,106,147,164,],[-74,-81,-64,-75,-76,-77,-65,135,-66,-67,-68,-80,-63,]),'PLUS':([73,78,79,80,81,82,83,97,102,103,104,105,106,133,136,147,164,172,173,],[-74,-82,-81,-64,-75,-76,-77,-65,130,-69,-66,-67,-68,-59,-62,-80,-63,-60,-61,]),'MINUS':([73,78,79,80,81,82,83,97,102,103,104,105,106,133,136,147,164,172,173,],[-74,-82,-81,-64,-75,-76,-77,-65,131,-69,-66,-67,-68,-59,-62,-80,-63,-60,-61,]),'GT':([73,77,78,79,80,81,82,83,97,101,102,103,104,105,106,129,132,133,136,147,164,170,171,172,173,],[-74,-83,-82,-81,-64,-75,-76,-77,-65,123,-69,-69,-66,-67,-68,-55,-58,-59,-62,-80,-63,-56,-57,-60,-61,]),'LT':([73,77,78,79,80,81,82,83,97,101,102,103,104,105,106,129,132,133,136,147,164,170,171,172,173,],[-74,-83,-82,-81,-64,-75,-76,-77,-65,124,-69,-69,-66,-67,-68,-55,-58,-59,-62,-80,-63,-56,-57,-60,-61,]),'EQ':([73,77,78,79,80,81,82,83,97,101,102,103,104,105,106,129,132,133,136,147,164,170,171,172,173,],[-74,-83,-82,-81,-64,-75,-76,-77,-65,125,-69,-69,-66,-67,-68,-55,-58,-59,-62,-80,-63,-56,-57,-60,-61,]),'LEQ':([73,77,78,79,80,81,82,83,97,101,102,103,104,105,106,129,132,133,136,147,164,170,171,172,173,],[-74,-83,-82,-81,-64,-75,-76,-77,-65,126,-69,-69,-66,-67,-68,-55,-58,-59,-62,-80,-63,-56,-57,-60,-61,]),'GEQ':([73,77,78,79,80,81,82,83,97,101,102,103,104,105,106,129,132,133,136,147,164,170,171,172,173,],[-74,-83,-82,-81,-64,-75,-76,-77,-65,127,-69,-69,-66,-67,-68,-55,-58,-59,-62,-80,-63,-56,-57,-60,-61,]),'R_BRACKET':([96,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'create_dirfunc':([2,],[3,]),'vars2':([5,7,143,],[6,14,161,]),'vars':([5,7,143,],[7,7,7,]),'empty':([5,6,7,11,59,69,92,101,102,103,116,143,],[8,12,8,12,72,72,115,128,132,136,72,8,]),'func2':([6,11,],[10,22,]),'func':([6,11,],[11,11,]),'tipo':([9,92,],[15,114,]),'bloque':([10,137,160,161,180,],[20,158,177,178,183,]),'tipo_func':([13,],[23,]),'current_type':([16,17,18,19,24,25,26,27,28,],[30,31,32,33,50,51,52,53,54,]),'estatuto_rep':([21,],[34,]),'estatuto':([21,34,],[35,58,]),'asignacion':([21,34,],[36,36,]),'condicion':([21,34,],[37,37,]),'escritura':([21,34,],[38,38,]),'llamada':([21,34,],[39,39,]),'retorno':([21,34,],[40,40,]),'lectura':([21,34,],[41,41,]),'repeticion':([21,34,],[42,42,]),'id_list':([29,64,144,],[55,90,162,]),'stack_operand_id':([43,73,],[59,97,]),'addJump':([48,],[65,]),'addfunc':([49,],[66,]),'addvar':([56,93,],[69,116,]),'array':([59,69,116,],[70,94,145,]),'exp_rep':([60,],[75,]),'expresion':([60,61,62,63,91,98,100,109,117,149,150,151,152,153,],[76,84,88,89,112,119,121,88,146,165,166,167,168,169,]),'exp':([60,61,62,63,91,98,100,109,117,149,150,151,152,153,154,155,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,170,171,]),'termino':([60,61,62,63,91,98,100,109,117,149,150,151,152,153,154,155,156,157,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,172,173,]),'factor':([60,61,62,63,91,98,100,109,117,149,150,151,152,153,154,155,156,157,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'var_cte':([60,61,62,63,91,98,100,109,117,149,150,151,152,153,154,155,156,157,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'escritura_rep':([62,],[85,]),'escritura_aux':([62,109,],[86,139,]),'fakebottom':([74,],[98,]),'checkrelop':([77,],[101,]),'checkexp':([78,],[102,]),'checkterm':([79,],[103,]),'stack_operand_int':([81,],[104,]),'stack_operand_float':([82,],[105,]),'stack_operand_char':([83,],[106,]),'parms':([92,],[113,]),'stack_operator':([95,123,124,125,126,127,130,131,134,135,],[117,149,150,151,152,153,154,155,156,157,]),'np_llamada':([99,],[120,]),'relop':([101,],[122,]),'masmenos':([102,],[129,]),'multdiv':([103,],[133,]),'GotoF':([107,142,],[137,160,]),'return':([110,],[140,]),'np_asignacion':([146,],[163,]),'checkparentesis':([147,],[164,]),'else_aux':([158,],[174,]),'end_if':([158,183,],[176,184,]),'Goto':([175,],[180,]),'end_while':([177,],[181,]),'endProc':([178,],[182,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 bloque','PROGRAMA',7,'p_programa','Yacc.py',9),
  ('vars -> VAR tipo COLON id_list SEMICOLON','vars',5,'p_vars','Yacc.py',13),
  ('vars2 -> vars vars2','vars2',2,'p_vars2','Yacc.py',16),
  ('vars2 -> empty','vars2',1,'p_vars2','Yacc.py',17),
  ('id_list -> id_list COMMA ID addvar array','id_list',5,'p_id_list','Yacc.py',21),
  ('id_list -> ID addvar array','id_list',3,'p_id_list','Yacc.py',22),
  ('array -> L_BRACKET CTE_I R_BRACKET','array',3,'p_array','Yacc.py',26),
  ('array -> empty','array',1,'p_array','Yacc.py',27),
  ('tipo -> INT current_type','tipo',2,'p_tipo','Yacc.py',31),
  ('tipo -> FLOAT current_type','tipo',2,'p_tipo','Yacc.py',32),
  ('tipo -> BOOL current_type','tipo',2,'p_tipo','Yacc.py',33),
  ('tipo -> CHAR current_type','tipo',2,'p_tipo','Yacc.py',34),
  ('func -> FUNCTION tipo_func ID addfunc L_PAREN parms R_PAREN vars2 bloque endProc','func',10,'p_func','Yacc.py',38),
  ('func2 -> func func2','func2',2,'p_func2','Yacc.py',41),
  ('func2 -> empty','func2',1,'p_func2','Yacc.py',42),
  ('tipo_func -> INT current_type','tipo_func',2,'p_tipo_func','Yacc.py',45),
  ('tipo_func -> FLOAT current_type','tipo_func',2,'p_tipo_func','Yacc.py',46),
  ('tipo_func -> CHAR current_type','tipo_func',2,'p_tipo_func','Yacc.py',47),
  ('tipo_func -> BOOL current_type','tipo_func',2,'p_tipo_func','Yacc.py',48),
  ('tipo_func -> VOID current_type','tipo_func',2,'p_tipo_func','Yacc.py',49),
  ('parms -> tipo ID id_list','parms',3,'p_parms','Yacc.py',53),
  ('parms -> empty','parms',1,'p_parms','Yacc.py',54),
  ('bloque -> L_BRACE estatuto_rep R_BRACE','bloque',3,'p_bloque','Yacc.py',58),
  ('estatuto_rep -> estatuto_rep estatuto','estatuto_rep',2,'p_estatuto_rep','Yacc.py',62),
  ('estatuto_rep -> estatuto','estatuto_rep',1,'p_estatuto_rep','Yacc.py',63),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Yacc.py',67),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Yacc.py',68),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Yacc.py',69),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','Yacc.py',70),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','Yacc.py',71),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Yacc.py',72),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','Yacc.py',73),
  ('asignacion -> ID stack_operand_id array EQUAL stack_operator expresion np_asignacion SEMICOLON','asignacion',8,'p_asignacion','Yacc.py',77),
  ('llamada -> ID L_PAREN exp_rep R_PAREN np_llamada SEMICOLON','llamada',6,'p_llamada','Yacc.py',81),
  ('exp_rep -> exp_rep COMMA expresion','exp_rep',3,'p_exp_rep','Yacc.py',89),
  ('exp_rep -> expresion','exp_rep',1,'p_exp_rep','Yacc.py',90),
  ('retorno -> RETURN L_PAREN expresion R_PAREN return SEMICOLON','retorno',6,'p_retorno','Yacc.py',104),
  ('lectura -> READ L_PAREN id_list R_PAREN SEMICOLON','lectura',5,'p_lectura','Yacc.py',108),
  ('escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON','escritura',5,'p_escritura','Yacc.py',112),
  ('escritura_rep -> escritura_rep COMMA escritura_aux','escritura_rep',3,'p_escritura_rep','Yacc.py',116),
  ('escritura_rep -> escritura_aux','escritura_rep',1,'p_escritura_rep','Yacc.py',117),
  ('escritura_aux -> CTE_S','escritura_aux',1,'p_escritura_aux','Yacc.py',121),
  ('escritura_aux -> expresion','escritura_aux',1,'p_escritura_aux','Yacc.py',122),
  ('condicion -> IF L_PAREN expresion R_PAREN GotoF bloque else_aux','condicion',7,'p_condicion','Yacc.py',126),
  ('else_aux -> ELSE Goto bloque end_if','else_aux',4,'p_else_aux','Yacc.py',130),
  ('else_aux -> end_if','else_aux',1,'p_else_aux','Yacc.py',131),
  ('repeticion -> WHILE addJump L_PAREN expresion R_PAREN GotoF bloque end_while','repeticion',8,'p_repeticion','Yacc.py',135),
  ('expresion -> exp checkrelop relop','expresion',3,'p_expresion','Yacc.py',140),
  ('relop -> GT stack_operator expresion','relop',3,'p_relop','Yacc.py',144),
  ('relop -> LT stack_operator expresion','relop',3,'p_relop','Yacc.py',145),
  ('relop -> EQ stack_operator expresion','relop',3,'p_relop','Yacc.py',146),
  ('relop -> LEQ stack_operator expresion','relop',3,'p_relop','Yacc.py',147),
  ('relop -> GEQ stack_operator expresion','relop',3,'p_relop','Yacc.py',148),
  ('relop -> empty','relop',1,'p_relop','Yacc.py',149),
  ('exp -> termino checkexp masmenos','exp',3,'p_exp','Yacc.py',153),
  ('masmenos -> PLUS stack_operator exp','masmenos',3,'p_masmenos','Yacc.py',157),
  ('masmenos -> MINUS stack_operator exp','masmenos',3,'p_masmenos','Yacc.py',158),
  ('masmenos -> empty','masmenos',1,'p_masmenos','Yacc.py',159),
  ('termino -> factor checkterm multdiv','termino',3,'p_termino','Yacc.py',162),
  ('multdiv -> MULT stack_operator termino','multdiv',3,'p_multdiv','Yacc.py',166),
  ('multdiv -> DIV stack_operator termino','multdiv',3,'p_multdiv','Yacc.py',167),
  ('multdiv -> empty','multdiv',1,'p_multdiv','Yacc.py',168),
  ('factor -> L_PAREN fakebottom expresion R_PAREN checkparentesis','factor',5,'p_factor','Yacc.py',172),
  ('factor -> var_cte','factor',1,'p_factor','Yacc.py',173),
  ('var_cte -> ID stack_operand_id','var_cte',2,'p_var_cte','Yacc.py',177),
  ('var_cte -> CTE_I stack_operand_int','var_cte',2,'p_var_cte','Yacc.py',178),
  ('var_cte -> CTE_F stack_operand_float','var_cte',2,'p_var_cte','Yacc.py',179),
  ('var_cte -> CTE_CHAR stack_operand_char','var_cte',2,'p_var_cte','Yacc.py',180),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',184),
  ('create_dirfunc -> <empty>','create_dirfunc',0,'p_create_dirfunc','Yacc.py',244),
  ('current_type -> <empty>','current_type',0,'p_current_type','Yacc.py',254),
  ('addvar -> <empty>','addvar',0,'p_addvar','Yacc.py',260),
  ('addfunc -> <empty>','addfunc',0,'p_addfunc','Yacc.py',275),
  ('stack_operand_id -> <empty>','stack_operand_id',0,'p_stack_operand_id','Yacc.py',413),
  ('stack_operand_int -> <empty>','stack_operand_int',0,'p_stack_operand_int','Yacc.py',433),
  ('stack_operand_float -> <empty>','stack_operand_float',0,'p_stack_operand_float','Yacc.py',444),
  ('stack_operand_char -> <empty>','stack_operand_char',0,'p_stack_operand_char','Yacc.py',454),
  ('stack_operator -> <empty>','stack_operator',0,'p_stack_operator','Yacc.py',463),
  ('fakebottom -> <empty>','fakebottom',0,'p_fakebottom','Yacc.py',469),
  ('checkparentesis -> <empty>','checkparentesis',0,'p_checkparentesis','Yacc.py',474),
  ('checkterm -> <empty>','checkterm',0,'p_checkterm','Yacc.py',484),
  ('checkexp -> <empty>','checkexp',0,'p_checkexp','Yacc.py',503),
  ('checkrelop -> <empty>','checkrelop',0,'p_checkrelop','Yacc.py',522),
  ('np_llamada -> <empty>','np_llamada',0,'p_np_llamada','Yacc.py',541),
  ('np_asignacion -> <empty>','np_asignacion',0,'p_np_asignacion','Yacc.py',556),
  ('return -> <empty>','return',0,'p_return','Yacc.py',576),
  ('GotoF -> <empty>','GotoF',0,'p_GotoF','Yacc.py',587),
  ('Goto -> <empty>','Goto',0,'p_Goto','Yacc.py',598),
  ('end_if -> <empty>','end_if',0,'p_end_if','Yacc.py',606),
  ('end_while -> <empty>','end_while',0,'p_end_while','Yacc.py',612),
  ('addJump -> <empty>','addJump',0,'p_addJump','Yacc.py',620),
  ('endProc -> <empty>','endProc',0,'p_endProc','Yacc.py',628),
]
