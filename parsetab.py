
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR COLON COMMA CTE_CHAR CTE_F CTE_I CTE_S DIV DO ELSE EQ EQUAL FLOAT FOR FUNCTION GEQ GT ID IF INT LEQ LT L_BRACE L_BRACKET L_PAREN MEDIA MINUS MODA MULT PLOTXY PLUS PROGRAM READ REG RETURN R_BRACE R_BRACKET R_PAREN SEMICOLON TO VAR VARIANZA VOID WHILE WRITEPROGRAMA : PROGRAM create_dirfunc ID  SEMICOLON vars func bloquevars : VAR tipo addvar COLON id_list SEMICOLON\n            | emptyid_list : id_list COMMA ID addvar array\n               | ID arrayarray : L_BRACKET CTE_I R_BRACKET\n                    | emptytipo : INT current_type\n            | FLOAT current_type\n            | CHAR current_typefunc : FUNCTION tipo_func ID addfunc L_PAREN parms R_PAREN vars bloquetipo_func : INT current_type\n                 | FLOAT current_type\n                 | CHAR current_type\n                 | VOID current_typeparms : tipo ID addvar id_list\n             | emptybloque : L_BRACE estatuto_rep R_BRACEestatuto_rep : estatuto_rep estatuto\n                     | estatutoestatuto : asignacion\n                | condicion\n                | escritura\n                | llamada\n                | retorno\n                | lectura\n                | repeticionasignacion : ID stack_operand_id array EQUAL stack_operator expresion np_asignacion SEMICOLONllamada : ID L_PAREN exp_rep R_PAREN np_llamada SEMICOLONexp_rep : exp_rep COMMA expresion\n                | expresionretorno : RETURN L_PAREN expresion R_PAREN return SEMICOLONlectura : READ L_PAREN id_list R_PAREN SEMICOLONescritura : WRITE L_PAREN escritura_rep R_PAREN SEMICOLONescritura_rep : escritura_rep COMMA escritura_aux\n                      | escritura_auxescritura_aux : CTE_S\n                         | expresioncondicion : IF L_PAREN expresion R_PAREN bloque else_auxelse_aux : ELSE bloque\n                   | emptyrepeticion : WHILE L_PAREN expresion R_PAREN bloque\n                  | FOR ID EQUAL expresion TO expresion DO bloqueexpresion : exp\n                 | exp checkrelop relop exprelop : GT stack_operator\n             | LT stack_operator\n             | EQ stack_operator\n             | LEQ stack_operator\n             | GEQ stack_operatorexp : termino\n           | termino checkexp masmenos terminomasmenos : PLUS stack_operator\n                | MINUS stack_operatortermino : factor\n               | factor checkterm multdiv factormultdiv : MULT stack_operator\n               | DIV stack_operatorfactor : L_PAREN fakebottom expresion R_PAREN checkparentesis\n              | masmenos var_cte\n              | var_ctevar_cte : ID stack_operand_id\n               | CTE_I stack_operand_int\n               | CTE_F stack_operand_float\n               | CTE_CHAR stack_operand_charempty :create_dirfunc :current_type :addvar :addfunc :stack_operand_id :stack_operand_int :stack_operand_float :stack_operand_char :stack_operator :fakebottom :checkparentesis :checkterm :checkexp :checkrelop :np_llamada :np_asignacion :return :GotoF :Goto :endProc :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,48,],[0,-1,-18,]),'ID':([2,3,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,41,43,44,45,46,47,48,49,51,52,53,54,55,56,65,70,73,74,86,89,91,94,96,101,102,108,114,117,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,140,144,146,147,148,149,150,153,154,155,157,158,161,165,169,170,],[-67,4,-68,-68,-68,35,42,-68,-68,-68,-68,-8,-9,-10,35,-20,-21,-22,-23,-24,-25,-26,-27,57,-12,-13,-14,-15,60,-18,-19,64,64,64,64,60,64,-76,64,-75,-75,64,116,-75,64,64,-53,-54,64,140,64,64,-75,-75,-75,-75,-75,64,64,-75,-75,-66,-34,-33,-42,64,-69,-29,-46,-47,-48,-49,-50,-57,-58,-39,-41,-32,60,-40,-28,-43,]),'SEMICOLON':([4,59,60,63,64,68,69,71,72,75,76,77,90,93,95,99,103,104,105,107,109,110,116,118,120,135,141,142,143,145,151,152,162,163,164,],[5,88,-66,-7,-71,-44,-51,-55,-61,-72,-73,-74,-5,-62,-81,-60,-63,-64,-65,133,-83,136,-69,-6,144,158,-66,-82,-77,-45,-52,-56,-4,169,-59,]),'VAR':([5,139,],[7,7,]),'FUNCTION':([5,6,8,88,],[-66,10,-3,-2,]),'INT':([7,10,87,],[12,18,12,]),'FLOAT':([7,10,87,],[13,19,13,]),'CHAR':([7,10,87,],[14,20,14,]),'L_BRACE':([8,9,48,88,106,111,139,156,160,166,167,],[-3,16,-18,-2,16,16,-66,16,16,16,-11,]),'VOID':([10,],[21,]),'COLON':([11,12,13,14,22,23,24,25,],[-69,-68,-68,-68,47,-8,-9,-10,]),'IF':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[36,36,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'WRITE':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[37,37,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'RETURN':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[38,38,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'READ':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[39,39,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'WHILE':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[40,40,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'FOR':([16,26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[41,41,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'R_BRACE':([26,27,28,29,30,31,32,33,34,48,49,132,133,136,137,144,155,157,158,165,169,170,],[48,-20,-21,-22,-23,-24,-25,-26,-27,-18,-19,-66,-34,-33,-42,-29,-39,-41,-32,-40,-28,-43,]),'L_PAREN':([35,36,37,38,39,40,42,51,52,53,54,56,58,65,73,74,86,91,94,96,101,102,108,117,122,123,124,125,126,127,128,129,130,131,138,146,147,148,149,150,153,154,],[51,52,53,54,55,56,-70,65,65,65,65,65,87,-76,-75,-75,65,-75,65,65,-53,-54,65,65,65,-75,-75,-75,-75,-75,65,65,-75,-75,65,-46,-47,-48,-49,-50,-57,-58,]),'L_BRACKET':([35,50,60,116,141,],[-71,62,62,-69,62,]),'EQUAL':([35,50,57,61,63,118,],[-71,-66,86,91,-7,-6,]),'ELSE':([48,132,],[-18,156,]),'PLUS':([51,52,53,54,56,64,65,69,71,72,73,74,75,76,77,86,91,93,94,96,98,99,101,102,103,104,105,108,117,122,123,124,125,126,127,128,129,130,131,138,143,146,147,148,149,150,152,153,154,164,],[73,73,73,73,73,-71,-76,-79,-55,-61,-75,-75,-72,-73,-74,73,-75,-62,73,73,73,-60,-53,-54,-63,-64,-65,73,73,73,-75,-75,-75,-75,-75,73,73,-75,-75,73,-77,-46,-47,-48,-49,-50,-56,-57,-58,-59,]),'MINUS':([51,52,53,54,56,64,65,69,71,72,73,74,75,76,77,86,91,93,94,96,98,99,101,102,103,104,105,108,117,122,123,124,125,126,127,128,129,130,131,138,143,146,147,148,149,150,152,153,154,164,],[74,74,74,74,74,-71,-76,-79,-55,-61,-75,-75,-72,-73,-74,74,-75,-62,74,74,74,-60,-53,-54,-63,-64,-65,74,74,74,-75,-75,-75,-75,-75,74,74,-75,-75,74,-77,-46,-47,-48,-49,-50,-56,-57,-58,-59,]),'CTE_I':([51,52,53,54,56,62,65,70,73,74,86,91,94,96,101,102,108,117,122,123,124,125,126,127,128,129,130,131,138,146,147,148,149,150,153,154,],[75,75,75,75,75,92,-76,75,-75,-75,75,-75,75,75,-53,-54,75,75,75,-75,-75,-75,-75,-75,75,75,-75,-75,75,-46,-47,-48,-49,-50,-57,-58,]),'CTE_F':([51,52,53,54,56,65,70,73,74,86,91,94,96,101,102,108,117,122,123,124,125,126,127,128,129,130,131,138,146,147,148,149,150,153,154,],[76,76,76,76,76,-76,76,-75,-75,76,-75,76,76,-53,-54,76,76,76,-75,-75,-75,-75,-75,76,76,-75,-75,76,-46,-47,-48,-49,-50,-57,-58,]),'CTE_CHAR':([51,52,53,54,56,65,70,73,74,86,91,94,96,101,102,108,117,122,123,124,125,126,127,128,129,130,131,138,146,147,148,149,150,153,154,],[77,77,77,77,77,-76,77,-75,-75,77,-75,77,77,-53,-54,77,77,77,-75,-75,-75,-75,-75,77,77,-75,-75,77,-46,-47,-48,-49,-50,-57,-58,]),'CTE_S':([53,108,],[81,81,]),'COMMA':([59,60,63,64,66,67,68,69,71,72,75,76,77,79,80,81,82,84,90,93,99,103,104,105,116,118,121,134,141,143,145,151,152,162,164,168,],[89,-66,-7,-71,96,-31,-44,-51,-55,-61,-72,-73,-74,108,-36,-37,-38,89,-5,-62,-60,-63,-64,-65,-69,-6,-30,-35,-66,-77,-45,-52,-56,-4,-59,89,]),'R_PAREN':([60,63,64,66,67,68,69,71,72,75,76,77,78,79,80,81,82,83,84,85,87,90,93,99,103,104,105,113,115,116,118,119,121,134,141,143,145,151,152,162,164,168,],[-66,-7,-71,95,-31,-44,-51,-55,-61,-72,-73,-74,106,107,-36,-37,-38,109,110,111,-66,-5,-62,-60,-63,-64,-65,139,-17,-69,-6,143,-30,-35,-66,-77,-45,-52,-56,-4,-59,-16,]),'MULT':([64,71,72,75,76,77,93,99,100,103,104,105,143,164,],[-71,-78,-61,-72,-73,-74,-62,-60,130,-63,-64,-65,-77,-59,]),'DIV':([64,71,72,75,76,77,93,99,100,103,104,105,143,164,],[-71,-78,-61,-72,-73,-74,-62,-60,131,-63,-64,-65,-77,-59,]),'GT':([64,68,69,71,72,75,76,77,93,97,99,103,104,105,143,151,152,164,],[-71,-80,-51,-55,-61,-72,-73,-74,-62,123,-60,-63,-64,-65,-77,-52,-56,-59,]),'LT':([64,68,69,71,72,75,76,77,93,97,99,103,104,105,143,151,152,164,],[-71,-80,-51,-55,-61,-72,-73,-74,-62,124,-60,-63,-64,-65,-77,-52,-56,-59,]),'EQ':([64,68,69,71,72,75,76,77,93,97,99,103,104,105,143,151,152,164,],[-71,-80,-51,-55,-61,-72,-73,-74,-62,125,-60,-63,-64,-65,-77,-52,-56,-59,]),'LEQ':([64,68,69,71,72,75,76,77,93,97,99,103,104,105,143,151,152,164,],[-71,-80,-51,-55,-61,-72,-73,-74,-62,126,-60,-63,-64,-65,-77,-52,-56,-59,]),'GEQ':([64,68,69,71,72,75,76,77,93,97,99,103,104,105,143,151,152,164,],[-71,-80,-51,-55,-61,-72,-73,-74,-62,127,-60,-63,-64,-65,-77,-52,-56,-59,]),'TO':([64,68,69,71,72,75,76,77,93,99,103,104,105,112,143,145,151,152,164,],[-71,-44,-51,-55,-61,-72,-73,-74,-62,-60,-63,-64,-65,138,-77,-45,-52,-56,-59,]),'DO':([64,68,69,71,72,75,76,77,93,99,103,104,105,143,145,151,152,159,164,],[-71,-44,-51,-55,-61,-72,-73,-74,-62,-60,-63,-64,-65,-77,-45,-52,-56,166,-59,]),'R_BRACKET':([92,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'create_dirfunc':([2,],[3,]),'vars':([5,139,],[6,160,]),'empty':([5,50,60,87,132,139,141,],[8,63,63,115,157,8,63,]),'func':([6,],[9,]),'tipo':([7,87,],[11,114,]),'bloque':([9,106,111,156,160,166,],[15,132,137,165,167,170,]),'tipo_func':([10,],[17,]),'addvar':([11,116,140,],[22,141,161,]),'current_type':([12,13,14,18,19,20,21,],[23,24,25,43,44,45,46,]),'estatuto_rep':([16,],[26,]),'estatuto':([16,26,],[27,49,]),'asignacion':([16,26,],[28,28,]),'condicion':([16,26,],[29,29,]),'escritura':([16,26,],[30,30,]),'llamada':([16,26,],[31,31,]),'retorno':([16,26,],[32,32,]),'lectura':([16,26,],[33,33,]),'repeticion':([16,26,],[34,34,]),'stack_operand_id':([35,64,],[50,93,]),'addfunc':([42,],[58,]),'id_list':([47,55,161,],[59,84,168,]),'array':([50,60,141,],[61,90,162,]),'exp_rep':([51,],[66,]),'expresion':([51,52,53,54,56,86,94,96,108,117,138,],[67,78,82,83,85,112,119,121,82,142,159,]),'exp':([51,52,53,54,56,86,94,96,108,117,122,138,],[68,68,68,68,68,68,68,68,68,68,145,68,]),'termino':([51,52,53,54,56,86,94,96,108,117,122,128,138,],[69,69,69,69,69,69,69,69,69,69,69,151,69,]),'masmenos':([51,52,53,54,56,86,94,96,98,108,117,122,128,129,138,],[70,70,70,70,70,70,70,70,128,70,70,70,70,70,70,]),'factor':([51,52,53,54,56,86,94,96,108,117,122,128,129,138,],[71,71,71,71,71,71,71,71,71,71,71,71,152,71,]),'var_cte':([51,52,53,54,56,70,86,94,96,108,117,122,128,129,138,],[72,72,72,72,72,99,72,72,72,72,72,72,72,72,72,]),'escritura_rep':([53,],[79,]),'escritura_aux':([53,108,],[80,134,]),'fakebottom':([65,],[94,]),'checkrelop':([68,],[97,]),'checkexp':([69,],[98,]),'checkterm':([71,],[100,]),'stack_operator':([73,74,91,123,124,125,126,127,130,131,],[101,102,117,146,147,148,149,150,153,154,]),'stack_operand_int':([75,],[103,]),'stack_operand_float':([76,],[104,]),'stack_operand_char':([77,],[105,]),'parms':([87,],[113,]),'np_llamada':([95,],[120,]),'relop':([97,],[122,]),'multdiv':([100,],[129,]),'return':([109,],[135,]),'else_aux':([132,],[155,]),'np_asignacion':([142,],[163,]),'checkparentesis':([143,],[164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars func bloque','PROGRAMA',7,'p_programa','Yacc.py',8),
  ('vars -> VAR tipo addvar COLON id_list SEMICOLON','vars',6,'p_vars','Yacc.py',12),
  ('vars -> empty','vars',1,'p_vars','Yacc.py',13),
  ('id_list -> id_list COMMA ID addvar array','id_list',5,'p_id_list','Yacc.py',17),
  ('id_list -> ID array','id_list',2,'p_id_list','Yacc.py',18),
  ('array -> L_BRACKET CTE_I R_BRACKET','array',3,'p_array','Yacc.py',22),
  ('array -> empty','array',1,'p_array','Yacc.py',23),
  ('tipo -> INT current_type','tipo',2,'p_tipo','Yacc.py',27),
  ('tipo -> FLOAT current_type','tipo',2,'p_tipo','Yacc.py',28),
  ('tipo -> CHAR current_type','tipo',2,'p_tipo','Yacc.py',29),
  ('func -> FUNCTION tipo_func ID addfunc L_PAREN parms R_PAREN vars bloque','func',9,'p_func','Yacc.py',33),
  ('tipo_func -> INT current_type','tipo_func',2,'p_tipo_func','Yacc.py',37),
  ('tipo_func -> FLOAT current_type','tipo_func',2,'p_tipo_func','Yacc.py',38),
  ('tipo_func -> CHAR current_type','tipo_func',2,'p_tipo_func','Yacc.py',39),
  ('tipo_func -> VOID current_type','tipo_func',2,'p_tipo_func','Yacc.py',40),
  ('parms -> tipo ID addvar id_list','parms',4,'p_parms','Yacc.py',44),
  ('parms -> empty','parms',1,'p_parms','Yacc.py',45),
  ('bloque -> L_BRACE estatuto_rep R_BRACE','bloque',3,'p_bloque','Yacc.py',49),
  ('estatuto_rep -> estatuto_rep estatuto','estatuto_rep',2,'p_estatuto_rep','Yacc.py',53),
  ('estatuto_rep -> estatuto','estatuto_rep',1,'p_estatuto_rep','Yacc.py',54),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','Yacc.py',58),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','Yacc.py',59),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','Yacc.py',60),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','Yacc.py',61),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','Yacc.py',62),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','Yacc.py',63),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','Yacc.py',64),
  ('asignacion -> ID stack_operand_id array EQUAL stack_operator expresion np_asignacion SEMICOLON','asignacion',8,'p_asignacion','Yacc.py',68),
  ('llamada -> ID L_PAREN exp_rep R_PAREN np_llamada SEMICOLON','llamada',6,'p_llamada','Yacc.py',72),
  ('exp_rep -> exp_rep COMMA expresion','exp_rep',3,'p_exp_rep','Yacc.py',80),
  ('exp_rep -> expresion','exp_rep',1,'p_exp_rep','Yacc.py',81),
  ('retorno -> RETURN L_PAREN expresion R_PAREN return SEMICOLON','retorno',6,'p_retorno','Yacc.py',95),
  ('lectura -> READ L_PAREN id_list R_PAREN SEMICOLON','lectura',5,'p_lectura','Yacc.py',99),
  ('escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON','escritura',5,'p_escritura','Yacc.py',103),
  ('escritura_rep -> escritura_rep COMMA escritura_aux','escritura_rep',3,'p_escritura_rep','Yacc.py',107),
  ('escritura_rep -> escritura_aux','escritura_rep',1,'p_escritura_rep','Yacc.py',108),
  ('escritura_aux -> CTE_S','escritura_aux',1,'p_escritura_aux','Yacc.py',112),
  ('escritura_aux -> expresion','escritura_aux',1,'p_escritura_aux','Yacc.py',113),
  ('condicion -> IF L_PAREN expresion R_PAREN bloque else_aux','condicion',6,'p_condicion','Yacc.py',117),
  ('else_aux -> ELSE bloque','else_aux',2,'p_else_aux','Yacc.py',121),
  ('else_aux -> empty','else_aux',1,'p_else_aux','Yacc.py',122),
  ('repeticion -> WHILE L_PAREN expresion R_PAREN bloque','repeticion',5,'p_repeticion','Yacc.py',126),
  ('repeticion -> FOR ID EQUAL expresion TO expresion DO bloque','repeticion',8,'p_repeticion','Yacc.py',127),
  ('expresion -> exp','expresion',1,'p_expresion','Yacc.py',131),
  ('expresion -> exp checkrelop relop exp','expresion',4,'p_expresion','Yacc.py',132),
  ('relop -> GT stack_operator','relop',2,'p_relop','Yacc.py',136),
  ('relop -> LT stack_operator','relop',2,'p_relop','Yacc.py',137),
  ('relop -> EQ stack_operator','relop',2,'p_relop','Yacc.py',138),
  ('relop -> LEQ stack_operator','relop',2,'p_relop','Yacc.py',139),
  ('relop -> GEQ stack_operator','relop',2,'p_relop','Yacc.py',140),
  ('exp -> termino','exp',1,'p_exp','Yacc.py',144),
  ('exp -> termino checkexp masmenos termino','exp',4,'p_exp','Yacc.py',145),
  ('masmenos -> PLUS stack_operator','masmenos',2,'p_masmenos','Yacc.py',149),
  ('masmenos -> MINUS stack_operator','masmenos',2,'p_masmenos','Yacc.py',150),
  ('termino -> factor','termino',1,'p_termino','Yacc.py',154),
  ('termino -> factor checkterm multdiv factor','termino',4,'p_termino','Yacc.py',155),
  ('multdiv -> MULT stack_operator','multdiv',2,'p_multdiv','Yacc.py',159),
  ('multdiv -> DIV stack_operator','multdiv',2,'p_multdiv','Yacc.py',160),
  ('factor -> L_PAREN fakebottom expresion R_PAREN checkparentesis','factor',5,'p_factor','Yacc.py',164),
  ('factor -> masmenos var_cte','factor',2,'p_factor','Yacc.py',165),
  ('factor -> var_cte','factor',1,'p_factor','Yacc.py',166),
  ('var_cte -> ID stack_operand_id','var_cte',2,'p_var_cte','Yacc.py',170),
  ('var_cte -> CTE_I stack_operand_int','var_cte',2,'p_var_cte','Yacc.py',171),
  ('var_cte -> CTE_F stack_operand_float','var_cte',2,'p_var_cte','Yacc.py',172),
  ('var_cte -> CTE_CHAR stack_operand_char','var_cte',2,'p_var_cte','Yacc.py',173),
  ('empty -> <empty>','empty',0,'p_empty','Yacc.py',177),
  ('create_dirfunc -> <empty>','create_dirfunc',0,'p_create_dirfunc','Yacc.py',224),
  ('current_type -> <empty>','current_type',0,'p_current_type','Yacc.py',234),
  ('addvar -> <empty>','addvar',0,'p_addvar','Yacc.py',240),
  ('addfunc -> <empty>','addfunc',0,'p_addfunc','Yacc.py',254),
  ('stack_operand_id -> <empty>','stack_operand_id',0,'p_stack_operand_id','Yacc.py',375),
  ('stack_operand_int -> <empty>','stack_operand_int',0,'p_stack_operand_int','Yacc.py',389),
  ('stack_operand_float -> <empty>','stack_operand_float',0,'p_stack_operand_float','Yacc.py',399),
  ('stack_operand_char -> <empty>','stack_operand_char',0,'p_stack_operand_char','Yacc.py',408),
  ('stack_operator -> <empty>','stack_operator',0,'p_stack_operator','Yacc.py',416),
  ('fakebottom -> <empty>','fakebottom',0,'p_fakebottom','Yacc.py',421),
  ('checkparentesis -> <empty>','checkparentesis',0,'p_checkparentesis','Yacc.py',426),
  ('checkterm -> <empty>','checkterm',0,'p_checkterm','Yacc.py',435),
  ('checkexp -> <empty>','checkexp',0,'p_checkexp','Yacc.py',454),
  ('checkrelop -> <empty>','checkrelop',0,'p_checkrelop','Yacc.py',473),
  ('np_llamada -> <empty>','np_llamada',0,'p_np_llamada','Yacc.py',492),
  ('np_asignacion -> <empty>','np_asignacion',0,'p_np_asignacion','Yacc.py',506),
  ('return -> <empty>','return',0,'p_return','Yacc.py',521),
  ('GotoF -> <empty>','GotoF',0,'p_GotoF','Yacc.py',534),
  ('Goto -> <empty>','Goto',0,'p_Goto','Yacc.py',545),
  ('endProc -> <empty>','endProc',0,'p_endProc','Yacc.py',555),
]
