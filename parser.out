Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR
    TO

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 principal
Rule 2     vars -> VAR tipo COLON id_list SEMICOLON
Rule 3     vars2 -> vars vars2
Rule 4     vars2 -> empty
Rule 5     id_list -> id_list COMMA ID addvar array
Rule 6     id_list -> ID addvar array
Rule 7     array -> L_BRACKET CTE_I addDim R_BRACKET jumpAddr
Rule 8     array -> empty
Rule 9     tipo -> INT current_type
Rule 10    tipo -> FLOAT current_type
Rule 11    tipo -> BOOL current_type
Rule 12    tipo -> CHAR current_type
Rule 13    func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
Rule 14    func2 -> func func2
Rule 15    func2 -> empty
Rule 16    tipo_func -> INT current_type
Rule 17    tipo_func -> FLOAT current_type
Rule 18    tipo_func -> CHAR current_type
Rule 19    tipo_func -> BOOL current_type
Rule 20    tipo_func -> VOID current_type
Rule 21    params -> tipo ID addvar updateParams params2
Rule 22    params -> empty
Rule 23    params2 -> COMMA tipo ID addvar updateParams params2
Rule 24    params2 -> empty
Rule 25    principal -> MAIN start funcChange L_PAREN R_PAREN bloque endProc
Rule 26    bloque -> L_BRACE estatuto_rep R_BRACE
Rule 27    estatuto_rep -> estatuto estatuto_rep
Rule 28    estatuto_rep -> empty
Rule 29    estatuto -> asignacion
Rule 30    estatuto -> condicion
Rule 31    estatuto -> escritura
Rule 32    estatuto -> llamada
Rule 33    estatuto -> retorno
Rule 34    estatuto -> lectura
Rule 35    estatuto -> repeticion
Rule 36    asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON
Rule 37    asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON
Rule 38    llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
Rule 39    func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN
Rule 40    func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN
Rule 41    func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN
Rule 42    func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN
Rule 43    func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN
Rule 44    retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON
Rule 45    lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON
Rule 46    escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON
Rule 47    escritura_rep -> escritura_rep COMMA escritura_aux
Rule 48    escritura_rep -> escritura_aux
Rule 49    escritura_aux -> CTE_S printString
Rule 50    escritura_aux -> expOr np_print
Rule 51    condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux
Rule 52    else_aux -> ELSE Goto bloque end_if
Rule 53    else_aux -> end_if
Rule 54    repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while
Rule 55    parm -> expOr checkParam parm2
Rule 56    parm -> empty
Rule 57    parm2 -> COMMA expOr checkParam parm2
Rule 58    parm2 -> empty
Rule 59    expOr -> expAnd checkAndOr OR stack_operator expOr
Rule 60    expOr -> expAnd checkAndOr
Rule 61    expAnd -> expresion checkAndOr AND stack_operator expAnd
Rule 62    expAnd -> expresion checkAndOr
Rule 63    expresion -> exp checkrelop relop
Rule 64    relop -> GT stack_operator expresion
Rule 65    relop -> LT stack_operator expresion
Rule 66    relop -> EQ stack_operator expresion
Rule 67    relop -> LEQ stack_operator expresion
Rule 68    relop -> GEQ stack_operator expresion
Rule 69    relop -> empty
Rule 70    exp -> termino checkexp masmenos
Rule 71    masmenos -> PLUS stack_operator exp
Rule 72    masmenos -> MINUS stack_operator exp
Rule 73    masmenos -> empty
Rule 74    termino -> factor checkterm multdiv
Rule 75    multdiv -> MULT stack_operator termino
Rule 76    multdiv -> DIV stack_operator termino
Rule 77    multdiv -> empty
Rule 78    factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis
Rule 79    factor -> var_cte
Rule 80    var_cte -> ID stack_operand_id
Rule 81    var_cte -> llamada
Rule 82    var_cte -> CTE_I stack_operand_int
Rule 83    var_cte -> CTE_F stack_operand_float
Rule 84    var_cte -> CTE_CHAR stack_operand_char
Rule 85    var_cte -> var_dim
Rule 86    var_cte -> func_especial
Rule 87    var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
Rule 88    empty -> <empty>
Rule 89    create_dirfunc -> <empty>
Rule 90    current_type -> <empty>
Rule 91    addvar -> <empty>
Rule 92    addfunc -> <empty>
Rule 93    stack_operand_id -> <empty>
Rule 94    stack_operand_int -> <empty>
Rule 95    stack_operand_float -> <empty>
Rule 96    stack_operand_char -> <empty>
Rule 97    stack_operator -> <empty>
Rule 98    fakebottom -> <empty>
Rule 99    checkparentesis -> <empty>
Rule 100   checkAndOr -> <empty>
Rule 101   checkterm -> <empty>
Rule 102   checkexp -> <empty>
Rule 103   checkrelop -> <empty>
Rule 104   llamadaEra -> <empty>
Rule 105   np_asignacion -> <empty>
Rule 106   np_return -> <empty>
Rule 107   GotoF -> <empty>
Rule 108   Goto -> <empty>
Rule 109   end_if -> <empty>
Rule 110   end_while -> <empty>
Rule 111   addJump -> <empty>
Rule 112   endFunc -> <empty>
Rule 113   updateParams -> <empty>
Rule 114   funcJump -> <empty>
Rule 115   funcChange -> <empty>
Rule 116   np_print -> <empty>
Rule 117   printString -> <empty>
Rule 118   np_read -> <empty>
Rule 119   np_funcSpec -> <empty>
Rule 120   start -> <empty>
Rule 121   endProc -> <empty>
Rule 122   checkParam -> <empty>
Rule 123   checkParamNum -> <empty>
Rule 124   Gosub -> <empty>
Rule 125   addDim -> <empty>
Rule 126   jumpAddr -> <empty>
Rule 127   verDim -> <empty>
Rule 128   verDimNum -> <empty>
Rule 129   cuadVer -> <empty>
Rule 130   cuadVarDim -> <empty>

Terminals, with rules where they appear

AND                  : 61
BOOL                 : 11 19
CHAR                 : 12 18
COLON                : 2
COMMA                : 5 23 47 57
CTE_CHAR             : 84
CTE_F                : 83
CTE_I                : 7 82
CTE_S                : 49
DESV                 : 42
DIV                  : 76
DO                   : 54
ELSE                 : 52
EQ                   : 66
EQUAL                : 36 37
FLOAT                : 10 17
FOR                  : 
FUNCTION             : 13
GEQ                  : 68
GT                   : 64
ID                   : 1 5 6 13 21 23 36 38 39 40 41 42 43 45 80 87
IF                   : 51
INT                  : 9 16
LEQ                  : 67
LT                   : 65
L_BRACE              : 13 26
L_BRACKET            : 7 87
L_PAREN              : 13 25 38 39 40 41 42 43 44 45 46 51 54 78
MAIN                 : 25
MEDIA                : 39
MEDIAN               : 43
MINUS                : 72
MODA                 : 40
MULT                 : 75
OR                   : 59
PLUS                 : 71
PROGRAM              : 1
READ                 : 45
RETURN               : 44
R_BRACE              : 13 26
R_BRACKET            : 7 87
R_PAREN              : 13 25 38 39 40 41 42 43 44 45 46 51 54 78
SEMICOLON            : 1 2 36 37 44 45 46
THEN                 : 51
TO                   : 
VAR                  : 2
VARIANZA             : 41
VOID                 : 20
WHILE                : 54
WRITE                : 46
error                : 

Nonterminals, with rules where they appear

Gosub                : 38
Goto                 : 52
GotoF                : 51 54
PROGRAMA             : 0
addDim               : 7
addJump              : 54
addfunc              : 13
addvar               : 5 6 21 23
array                : 5 6
asignacion           : 29
bloque               : 25 51 52 54
checkAndOr           : 59 60 61 62
checkParam           : 55 57
checkParamNum        : 38
checkexp             : 70
checkparentesis      : 38 78 87
checkrelop           : 63
checkterm            : 74
condicion            : 30
create_dirfunc       : 1
cuadVarDim           : 87
cuadVer              : 87
current_type         : 9 10 11 12 16 17 18 19 20
else_aux             : 51
empty                : 4 8 15 22 24 28 56 58 69 73 77
endFunc              : 13
endProc              : 25
end_if               : 52 53
end_while            : 54
escritura            : 31
escritura_aux        : 47 48
escritura_rep        : 46 47
estatuto             : 27
estatuto_rep         : 13 26 27
exp                  : 63 71 72
expAnd               : 59 60 61
expOr                : 36 37 44 50 51 54 55 57 59 78 87
expresion            : 61 62 64 65 66 67 68
factor               : 74
fakebottom           : 38 78 87
func                 : 14
func2                : 1 14
funcChange           : 25
funcJump             : 13
func_especial        : 86
id_list              : 2 5
jumpAddr             : 7
lectura              : 34
llamada              : 32 81
llamadaEra           : 38
masmenos             : 70
multdiv              : 74
np_asignacion        : 36 37
np_funcSpec          : 39 40 41 42 43
np_print             : 50
np_read              : 45
np_return            : 44
params               : 13
params2              : 21 23
parm                 : 38
parm2                : 55 57
principal            : 1
printString          : 49
relop                : 63
repeticion           : 35
retorno              : 33
stack_operand_char   : 84
stack_operand_float  : 83
stack_operand_id     : 36 80 87
stack_operand_int    : 82
stack_operator       : 36 37 59 61 64 65 66 67 68 71 72 75 76
start                : 25
termino              : 70 75 76
tipo                 : 2 21 23
tipo_func            : 13
updateParams         : 21 23
var_cte              : 79
var_dim              : 37 85
vars                 : 3
vars2                : 1 3 13
verDim               : 87
verDimNum            : 87

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM create_dirfunc ID SEMICOLON vars2 func2 principal

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . create_dirfunc ID SEMICOLON vars2 func2 principal
    (89) create_dirfunc -> .

    ID              reduce using rule 89 (create_dirfunc -> .)

    create_dirfunc                 shift and go to state 3

state 3

    (1) PROGRAMA -> PROGRAM create_dirfunc . ID SEMICOLON vars2 func2 principal

    ID              shift and go to state 4


state 4

    (1) PROGRAMA -> PROGRAM create_dirfunc ID . SEMICOLON vars2 func2 principal

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON . vars2 func2 principal
    (3) vars2 -> . vars vars2
    (4) vars2 -> . empty
    (2) vars -> . VAR tipo COLON id_list SEMICOLON
    (88) empty -> .

    VAR             shift and go to state 9
    FUNCTION        reduce using rule 88 (empty -> .)
    MAIN            reduce using rule 88 (empty -> .)

    vars2                          shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8

state 6

    (1) PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 . func2 principal
    (14) func2 -> . func func2
    (15) func2 -> . empty
    (13) func -> . FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (88) empty -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 88 (empty -> .)

    func2                          shift and go to state 10
    func                           shift and go to state 11
    empty                          shift and go to state 12

state 7

    (3) vars2 -> vars . vars2
    (3) vars2 -> . vars vars2
    (4) vars2 -> . empty
    (2) vars -> . VAR tipo COLON id_list SEMICOLON
    (88) empty -> .

    VAR             shift and go to state 9
    FUNCTION        reduce using rule 88 (empty -> .)
    MAIN            reduce using rule 88 (empty -> .)
    L_BRACE         reduce using rule 88 (empty -> .)

    vars                           shift and go to state 7
    vars2                          shift and go to state 14
    empty                          shift and go to state 8

state 8

    (4) vars2 -> empty .

    FUNCTION        reduce using rule 4 (vars2 -> empty .)
    MAIN            reduce using rule 4 (vars2 -> empty .)
    L_BRACE         reduce using rule 4 (vars2 -> empty .)


state 9

    (2) vars -> VAR . tipo COLON id_list SEMICOLON
    (9) tipo -> . INT current_type
    (10) tipo -> . FLOAT current_type
    (11) tipo -> . BOOL current_type
    (12) tipo -> . CHAR current_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19

    tipo                           shift and go to state 15

state 10

    (1) PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 . principal
    (25) principal -> . MAIN start funcChange L_PAREN R_PAREN bloque endProc

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 11

    (14) func2 -> func . func2
    (14) func2 -> . func func2
    (15) func2 -> . empty
    (13) func -> . FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (88) empty -> .

    FUNCTION        shift and go to state 13
    MAIN            reduce using rule 88 (empty -> .)

    func                           shift and go to state 11
    func2                          shift and go to state 22
    empty                          shift and go to state 12

state 12

    (15) func2 -> empty .

    MAIN            reduce using rule 15 (func2 -> empty .)


state 13

    (13) func -> FUNCTION . tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (16) tipo_func -> . INT current_type
    (17) tipo_func -> . FLOAT current_type
    (18) tipo_func -> . CHAR current_type
    (19) tipo_func -> . BOOL current_type
    (20) tipo_func -> . VOID current_type

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26
    BOOL            shift and go to state 27
    VOID            shift and go to state 28

    tipo_func                      shift and go to state 23

state 14

    (3) vars2 -> vars vars2 .

    FUNCTION        reduce using rule 3 (vars2 -> vars vars2 .)
    MAIN            reduce using rule 3 (vars2 -> vars vars2 .)
    L_BRACE         reduce using rule 3 (vars2 -> vars vars2 .)


state 15

    (2) vars -> VAR tipo . COLON id_list SEMICOLON

    COLON           shift and go to state 29


state 16

    (9) tipo -> INT . current_type
    (90) current_type -> .

    COLON           reduce using rule 90 (current_type -> .)
    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 30

state 17

    (10) tipo -> FLOAT . current_type
    (90) current_type -> .

    COLON           reduce using rule 90 (current_type -> .)
    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 31

state 18

    (11) tipo -> BOOL . current_type
    (90) current_type -> .

    COLON           reduce using rule 90 (current_type -> .)
    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 32

state 19

    (12) tipo -> CHAR . current_type
    (90) current_type -> .

    COLON           reduce using rule 90 (current_type -> .)
    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 33

state 20

    (1) PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 principal .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM create_dirfunc ID SEMICOLON vars2 func2 principal .)


state 21

    (25) principal -> MAIN . start funcChange L_PAREN R_PAREN bloque endProc
    (120) start -> .

    L_PAREN         reduce using rule 120 (start -> .)

    start                          shift and go to state 34

state 22

    (14) func2 -> func func2 .

    MAIN            reduce using rule 14 (func2 -> func func2 .)


state 23

    (13) func -> FUNCTION tipo_func . ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc

    ID              shift and go to state 35


state 24

    (16) tipo_func -> INT . current_type
    (90) current_type -> .

    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 36

state 25

    (17) tipo_func -> FLOAT . current_type
    (90) current_type -> .

    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 37

state 26

    (18) tipo_func -> CHAR . current_type
    (90) current_type -> .

    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 38

state 27

    (19) tipo_func -> BOOL . current_type
    (90) current_type -> .

    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 39

state 28

    (20) tipo_func -> VOID . current_type
    (90) current_type -> .

    ID              reduce using rule 90 (current_type -> .)

    current_type                   shift and go to state 40

state 29

    (2) vars -> VAR tipo COLON . id_list SEMICOLON
    (5) id_list -> . id_list COMMA ID addvar array
    (6) id_list -> . ID addvar array

    ID              shift and go to state 42

    id_list                        shift and go to state 41

state 30

    (9) tipo -> INT current_type .

    COLON           reduce using rule 9 (tipo -> INT current_type .)
    ID              reduce using rule 9 (tipo -> INT current_type .)


state 31

    (10) tipo -> FLOAT current_type .

    COLON           reduce using rule 10 (tipo -> FLOAT current_type .)
    ID              reduce using rule 10 (tipo -> FLOAT current_type .)


state 32

    (11) tipo -> BOOL current_type .

    COLON           reduce using rule 11 (tipo -> BOOL current_type .)
    ID              reduce using rule 11 (tipo -> BOOL current_type .)


state 33

    (12) tipo -> CHAR current_type .

    COLON           reduce using rule 12 (tipo -> CHAR current_type .)
    ID              reduce using rule 12 (tipo -> CHAR current_type .)


state 34

    (25) principal -> MAIN start . funcChange L_PAREN R_PAREN bloque endProc
    (115) funcChange -> .

    L_PAREN         reduce using rule 115 (funcChange -> .)

    funcChange                     shift and go to state 43

state 35

    (13) func -> FUNCTION tipo_func ID . addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (92) addfunc -> .

    L_PAREN         reduce using rule 92 (addfunc -> .)

    addfunc                        shift and go to state 44

state 36

    (16) tipo_func -> INT current_type .

    ID              reduce using rule 16 (tipo_func -> INT current_type .)


state 37

    (17) tipo_func -> FLOAT current_type .

    ID              reduce using rule 17 (tipo_func -> FLOAT current_type .)


state 38

    (18) tipo_func -> CHAR current_type .

    ID              reduce using rule 18 (tipo_func -> CHAR current_type .)


state 39

    (19) tipo_func -> BOOL current_type .

    ID              reduce using rule 19 (tipo_func -> BOOL current_type .)


state 40

    (20) tipo_func -> VOID current_type .

    ID              reduce using rule 20 (tipo_func -> VOID current_type .)


state 41

    (2) vars -> VAR tipo COLON id_list . SEMICOLON
    (5) id_list -> id_list . COMMA ID addvar array

    SEMICOLON       shift and go to state 45
    COMMA           shift and go to state 46


state 42

    (6) id_list -> ID . addvar array
    (91) addvar -> .

    L_BRACKET       reduce using rule 91 (addvar -> .)
    SEMICOLON       reduce using rule 91 (addvar -> .)
    COMMA           reduce using rule 91 (addvar -> .)

    addvar                         shift and go to state 47

state 43

    (25) principal -> MAIN start funcChange . L_PAREN R_PAREN bloque endProc

    L_PAREN         shift and go to state 48


state 44

    (13) func -> FUNCTION tipo_func ID addfunc . L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc

    L_PAREN         shift and go to state 49


state 45

    (2) vars -> VAR tipo COLON id_list SEMICOLON .

    VAR             reduce using rule 2 (vars -> VAR tipo COLON id_list SEMICOLON .)
    FUNCTION        reduce using rule 2 (vars -> VAR tipo COLON id_list SEMICOLON .)
    MAIN            reduce using rule 2 (vars -> VAR tipo COLON id_list SEMICOLON .)
    L_BRACE         reduce using rule 2 (vars -> VAR tipo COLON id_list SEMICOLON .)


state 46

    (5) id_list -> id_list COMMA . ID addvar array

    ID              shift and go to state 50


state 47

    (6) id_list -> ID addvar . array
    (7) array -> . L_BRACKET CTE_I addDim R_BRACKET jumpAddr
    (8) array -> . empty
    (88) empty -> .

    L_BRACKET       shift and go to state 52
    SEMICOLON       reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)

    array                          shift and go to state 51
    empty                          shift and go to state 53

state 48

    (25) principal -> MAIN start funcChange L_PAREN . R_PAREN bloque endProc

    R_PAREN         shift and go to state 54


state 49

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN . params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (21) params -> . tipo ID addvar updateParams params2
    (22) params -> . empty
    (9) tipo -> . INT current_type
    (10) tipo -> . FLOAT current_type
    (11) tipo -> . BOOL current_type
    (12) tipo -> . CHAR current_type
    (88) empty -> .

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19
    R_PAREN         reduce using rule 88 (empty -> .)

    params                         shift and go to state 55
    tipo                           shift and go to state 56
    empty                          shift and go to state 57

state 50

    (5) id_list -> id_list COMMA ID . addvar array
    (91) addvar -> .

    L_BRACKET       reduce using rule 91 (addvar -> .)
    SEMICOLON       reduce using rule 91 (addvar -> .)
    COMMA           reduce using rule 91 (addvar -> .)

    addvar                         shift and go to state 58

state 51

    (6) id_list -> ID addvar array .

    SEMICOLON       reduce using rule 6 (id_list -> ID addvar array .)
    COMMA           reduce using rule 6 (id_list -> ID addvar array .)


state 52

    (7) array -> L_BRACKET . CTE_I addDim R_BRACKET jumpAddr

    CTE_I           shift and go to state 59


state 53

    (8) array -> empty .

    SEMICOLON       reduce using rule 8 (array -> empty .)
    COMMA           reduce using rule 8 (array -> empty .)


state 54

    (25) principal -> MAIN start funcChange L_PAREN R_PAREN . bloque endProc
    (26) bloque -> . L_BRACE estatuto_rep R_BRACE

    L_BRACE         shift and go to state 61

    bloque                         shift and go to state 60

state 55

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params . R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc

    R_PAREN         shift and go to state 62


state 56

    (21) params -> tipo . ID addvar updateParams params2

    ID              shift and go to state 63


state 57

    (22) params -> empty .

    R_PAREN         reduce using rule 22 (params -> empty .)


state 58

    (5) id_list -> id_list COMMA ID addvar . array
    (7) array -> . L_BRACKET CTE_I addDim R_BRACKET jumpAddr
    (8) array -> . empty
    (88) empty -> .

    L_BRACKET       shift and go to state 52
    SEMICOLON       reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)

    array                          shift and go to state 64
    empty                          shift and go to state 53

state 59

    (7) array -> L_BRACKET CTE_I . addDim R_BRACKET jumpAddr
    (125) addDim -> .

    R_BRACKET       reduce using rule 125 (addDim -> .)

    addDim                         shift and go to state 65

state 60

    (25) principal -> MAIN start funcChange L_PAREN R_PAREN bloque . endProc
    (121) endProc -> .

    $end            reduce using rule 121 (endProc -> .)

    endProc                        shift and go to state 66

state 61

    (26) bloque -> L_BRACE . estatuto_rep R_BRACE
    (27) estatuto_rep -> . estatuto estatuto_rep
    (28) estatuto_rep -> . empty
    (29) estatuto -> . asignacion
    (30) estatuto -> . condicion
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada
    (33) estatuto -> . retorno
    (34) estatuto -> . lectura
    (35) estatuto -> . repeticion
    (88) empty -> .
    (36) asignacion -> . ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON
    (37) asignacion -> . var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON
    (51) condicion -> . IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux
    (46) escritura -> . WRITE L_PAREN escritura_rep R_PAREN SEMICOLON
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (44) retorno -> . RETURN L_PAREN expOr np_return R_PAREN SEMICOLON
    (45) lectura -> . READ L_PAREN ID np_read R_PAREN SEMICOLON
    (54) repeticion -> . WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim

    R_BRACE         reduce using rule 88 (empty -> .)
    ID              shift and go to state 77
    IF              shift and go to state 79
    WRITE           shift and go to state 80
    RETURN          shift and go to state 81
    READ            shift and go to state 82
    WHILE           shift and go to state 83

    estatuto_rep                   shift and go to state 67
    estatuto                       shift and go to state 68
    empty                          shift and go to state 69
    asignacion                     shift and go to state 70
    condicion                      shift and go to state 71
    escritura                      shift and go to state 72
    llamada                        shift and go to state 73
    retorno                        shift and go to state 74
    lectura                        shift and go to state 75
    repeticion                     shift and go to state 76
    var_dim                        shift and go to state 78

state 62

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN . vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc
    (3) vars2 -> . vars vars2
    (4) vars2 -> . empty
    (2) vars -> . VAR tipo COLON id_list SEMICOLON
    (88) empty -> .

    VAR             shift and go to state 9
    L_BRACE         reduce using rule 88 (empty -> .)

    vars2                          shift and go to state 84
    vars                           shift and go to state 7
    empty                          shift and go to state 8

state 63

    (21) params -> tipo ID . addvar updateParams params2
    (91) addvar -> .

    COMMA           reduce using rule 91 (addvar -> .)
    R_PAREN         reduce using rule 91 (addvar -> .)

    addvar                         shift and go to state 85

state 64

    (5) id_list -> id_list COMMA ID addvar array .

    SEMICOLON       reduce using rule 5 (id_list -> id_list COMMA ID addvar array .)
    COMMA           reduce using rule 5 (id_list -> id_list COMMA ID addvar array .)


state 65

    (7) array -> L_BRACKET CTE_I addDim . R_BRACKET jumpAddr

    R_BRACKET       shift and go to state 86


state 66

    (25) principal -> MAIN start funcChange L_PAREN R_PAREN bloque endProc .

    $end            reduce using rule 25 (principal -> MAIN start funcChange L_PAREN R_PAREN bloque endProc .)


state 67

    (26) bloque -> L_BRACE estatuto_rep . R_BRACE

    R_BRACE         shift and go to state 87


state 68

    (27) estatuto_rep -> estatuto . estatuto_rep
    (27) estatuto_rep -> . estatuto estatuto_rep
    (28) estatuto_rep -> . empty
    (29) estatuto -> . asignacion
    (30) estatuto -> . condicion
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada
    (33) estatuto -> . retorno
    (34) estatuto -> . lectura
    (35) estatuto -> . repeticion
    (88) empty -> .
    (36) asignacion -> . ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON
    (37) asignacion -> . var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON
    (51) condicion -> . IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux
    (46) escritura -> . WRITE L_PAREN escritura_rep R_PAREN SEMICOLON
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (44) retorno -> . RETURN L_PAREN expOr np_return R_PAREN SEMICOLON
    (45) lectura -> . READ L_PAREN ID np_read R_PAREN SEMICOLON
    (54) repeticion -> . WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim

    R_BRACE         reduce using rule 88 (empty -> .)
    ID              shift and go to state 77
    IF              shift and go to state 79
    WRITE           shift and go to state 80
    RETURN          shift and go to state 81
    READ            shift and go to state 82
    WHILE           shift and go to state 83

    estatuto                       shift and go to state 68
    estatuto_rep                   shift and go to state 88
    empty                          shift and go to state 69
    asignacion                     shift and go to state 70
    condicion                      shift and go to state 71
    escritura                      shift and go to state 72
    llamada                        shift and go to state 73
    retorno                        shift and go to state 74
    lectura                        shift and go to state 75
    repeticion                     shift and go to state 76
    var_dim                        shift and go to state 78

state 69

    (28) estatuto_rep -> empty .

    R_BRACE         reduce using rule 28 (estatuto_rep -> empty .)


state 70

    (29) estatuto -> asignacion .

    ID              reduce using rule 29 (estatuto -> asignacion .)
    IF              reduce using rule 29 (estatuto -> asignacion .)
    WRITE           reduce using rule 29 (estatuto -> asignacion .)
    RETURN          reduce using rule 29 (estatuto -> asignacion .)
    READ            reduce using rule 29 (estatuto -> asignacion .)
    WHILE           reduce using rule 29 (estatuto -> asignacion .)
    R_BRACE         reduce using rule 29 (estatuto -> asignacion .)


state 71

    (30) estatuto -> condicion .

    ID              reduce using rule 30 (estatuto -> condicion .)
    IF              reduce using rule 30 (estatuto -> condicion .)
    WRITE           reduce using rule 30 (estatuto -> condicion .)
    RETURN          reduce using rule 30 (estatuto -> condicion .)
    READ            reduce using rule 30 (estatuto -> condicion .)
    WHILE           reduce using rule 30 (estatuto -> condicion .)
    R_BRACE         reduce using rule 30 (estatuto -> condicion .)


state 72

    (31) estatuto -> escritura .

    ID              reduce using rule 31 (estatuto -> escritura .)
    IF              reduce using rule 31 (estatuto -> escritura .)
    WRITE           reduce using rule 31 (estatuto -> escritura .)
    RETURN          reduce using rule 31 (estatuto -> escritura .)
    READ            reduce using rule 31 (estatuto -> escritura .)
    WHILE           reduce using rule 31 (estatuto -> escritura .)
    R_BRACE         reduce using rule 31 (estatuto -> escritura .)


state 73

    (32) estatuto -> llamada .

    ID              reduce using rule 32 (estatuto -> llamada .)
    IF              reduce using rule 32 (estatuto -> llamada .)
    WRITE           reduce using rule 32 (estatuto -> llamada .)
    RETURN          reduce using rule 32 (estatuto -> llamada .)
    READ            reduce using rule 32 (estatuto -> llamada .)
    WHILE           reduce using rule 32 (estatuto -> llamada .)
    R_BRACE         reduce using rule 32 (estatuto -> llamada .)


state 74

    (33) estatuto -> retorno .

    ID              reduce using rule 33 (estatuto -> retorno .)
    IF              reduce using rule 33 (estatuto -> retorno .)
    WRITE           reduce using rule 33 (estatuto -> retorno .)
    RETURN          reduce using rule 33 (estatuto -> retorno .)
    READ            reduce using rule 33 (estatuto -> retorno .)
    WHILE           reduce using rule 33 (estatuto -> retorno .)
    R_BRACE         reduce using rule 33 (estatuto -> retorno .)


state 75

    (34) estatuto -> lectura .

    ID              reduce using rule 34 (estatuto -> lectura .)
    IF              reduce using rule 34 (estatuto -> lectura .)
    WRITE           reduce using rule 34 (estatuto -> lectura .)
    RETURN          reduce using rule 34 (estatuto -> lectura .)
    READ            reduce using rule 34 (estatuto -> lectura .)
    WHILE           reduce using rule 34 (estatuto -> lectura .)
    R_BRACE         reduce using rule 34 (estatuto -> lectura .)


state 76

    (35) estatuto -> repeticion .

    ID              reduce using rule 35 (estatuto -> repeticion .)
    IF              reduce using rule 35 (estatuto -> repeticion .)
    WRITE           reduce using rule 35 (estatuto -> repeticion .)
    RETURN          reduce using rule 35 (estatuto -> repeticion .)
    READ            reduce using rule 35 (estatuto -> repeticion .)
    WHILE           reduce using rule 35 (estatuto -> repeticion .)
    R_BRACE         reduce using rule 35 (estatuto -> repeticion .)


state 77

    (36) asignacion -> ID . stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON
    (38) llamada -> ID . llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> ID . stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (93) stack_operand_id -> .
    (104) llamadaEra -> .

    EQUAL           reduce using rule 93 (stack_operand_id -> .)
    L_BRACKET       reduce using rule 93 (stack_operand_id -> .)
    L_PAREN         reduce using rule 104 (llamadaEra -> .)

    stack_operand_id               shift and go to state 89
    llamadaEra                     shift and go to state 90

state 78

    (37) asignacion -> var_dim . EQUAL stack_operator expOr np_asignacion SEMICOLON

    EQUAL           shift and go to state 91


state 79

    (51) condicion -> IF . L_PAREN expOr R_PAREN GotoF THEN bloque else_aux

    L_PAREN         shift and go to state 92


state 80

    (46) escritura -> WRITE . L_PAREN escritura_rep R_PAREN SEMICOLON

    L_PAREN         shift and go to state 93


state 81

    (44) retorno -> RETURN . L_PAREN expOr np_return R_PAREN SEMICOLON

    L_PAREN         shift and go to state 94


state 82

    (45) lectura -> READ . L_PAREN ID np_read R_PAREN SEMICOLON

    L_PAREN         shift and go to state 95


state 83

    (54) repeticion -> WHILE . addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while
    (111) addJump -> .

    L_PAREN         reduce using rule 111 (addJump -> .)

    addJump                        shift and go to state 96

state 84

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 . L_BRACE funcJump estatuto_rep R_BRACE endFunc

    L_BRACE         shift and go to state 97


state 85

    (21) params -> tipo ID addvar . updateParams params2
    (113) updateParams -> .

    COMMA           reduce using rule 113 (updateParams -> .)
    R_PAREN         reduce using rule 113 (updateParams -> .)

    updateParams                   shift and go to state 98

state 86

    (7) array -> L_BRACKET CTE_I addDim R_BRACKET . jumpAddr
    (126) jumpAddr -> .

    SEMICOLON       reduce using rule 126 (jumpAddr -> .)
    COMMA           reduce using rule 126 (jumpAddr -> .)

    jumpAddr                       shift and go to state 99

state 87

    (26) bloque -> L_BRACE estatuto_rep R_BRACE .

    $end            reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    ELSE            reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    ID              reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    IF              reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    WRITE           reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    RETURN          reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    READ            reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    WHILE           reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)
    R_BRACE         reduce using rule 26 (bloque -> L_BRACE estatuto_rep R_BRACE .)


state 88

    (27) estatuto_rep -> estatuto estatuto_rep .

    R_BRACE         reduce using rule 27 (estatuto_rep -> estatuto estatuto_rep .)


state 89

    (36) asignacion -> ID stack_operand_id . EQUAL stack_operator expOr np_asignacion SEMICOLON
    (87) var_dim -> ID stack_operand_id . L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim

    EQUAL           shift and go to state 100
    L_BRACKET       shift and go to state 101


state 90

    (38) llamada -> ID llamadaEra . L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub

    L_PAREN         shift and go to state 102


state 91

    (37) asignacion -> var_dim EQUAL . stack_operator expOr np_asignacion SEMICOLON
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 103

state 92

    (51) condicion -> IF L_PAREN . expOr R_PAREN GotoF THEN bloque else_aux
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 105
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 93

    (46) escritura -> WRITE L_PAREN . escritura_rep R_PAREN SEMICOLON
    (47) escritura_rep -> . escritura_rep COMMA escritura_aux
    (48) escritura_rep -> . escritura_aux
    (49) escritura_aux -> . CTE_S printString
    (50) escritura_aux -> . expOr np_print
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    CTE_S           shift and go to state 126
    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    escritura_rep                  shift and go to state 124
    escritura_aux                  shift and go to state 125
    expOr                          shift and go to state 127
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 94

    (44) retorno -> RETURN L_PAREN . expOr np_return R_PAREN SEMICOLON
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 128
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 95

    (45) lectura -> READ L_PAREN . ID np_read R_PAREN SEMICOLON

    ID              shift and go to state 129


state 96

    (54) repeticion -> WHILE addJump . L_PAREN expOr R_PAREN GotoF DO bloque end_while

    L_PAREN         shift and go to state 130


state 97

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE . funcJump estatuto_rep R_BRACE endFunc
    (114) funcJump -> .

    ID              reduce using rule 114 (funcJump -> .)
    IF              reduce using rule 114 (funcJump -> .)
    WRITE           reduce using rule 114 (funcJump -> .)
    RETURN          reduce using rule 114 (funcJump -> .)
    READ            reduce using rule 114 (funcJump -> .)
    WHILE           reduce using rule 114 (funcJump -> .)
    R_BRACE         reduce using rule 114 (funcJump -> .)

    funcJump                       shift and go to state 131

state 98

    (21) params -> tipo ID addvar updateParams . params2
    (23) params2 -> . COMMA tipo ID addvar updateParams params2
    (24) params2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 133
    R_PAREN         reduce using rule 88 (empty -> .)

    params2                        shift and go to state 132
    empty                          shift and go to state 134

state 99

    (7) array -> L_BRACKET CTE_I addDim R_BRACKET jumpAddr .

    SEMICOLON       reduce using rule 7 (array -> L_BRACKET CTE_I addDim R_BRACKET jumpAddr .)
    COMMA           reduce using rule 7 (array -> L_BRACKET CTE_I addDim R_BRACKET jumpAddr .)


state 100

    (36) asignacion -> ID stack_operand_id EQUAL . stack_operator expOr np_asignacion SEMICOLON
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 135

state 101

    (87) var_dim -> ID stack_operand_id L_BRACKET . verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (127) verDim -> .

    L_PAREN         reduce using rule 127 (verDim -> .)
    ID              reduce using rule 127 (verDim -> .)
    CTE_I           reduce using rule 127 (verDim -> .)
    CTE_F           reduce using rule 127 (verDim -> .)
    CTE_CHAR        reduce using rule 127 (verDim -> .)
    MEDIA           reduce using rule 127 (verDim -> .)
    MODA            reduce using rule 127 (verDim -> .)
    VARIANZA        reduce using rule 127 (verDim -> .)
    DESV            reduce using rule 127 (verDim -> .)
    MEDIAN          reduce using rule 127 (verDim -> .)

    verDim                         shift and go to state 136

state 102

    (38) llamada -> ID llamadaEra L_PAREN . fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (98) fakebottom -> .

    L_PAREN         reduce using rule 98 (fakebottom -> .)
    ID              reduce using rule 98 (fakebottom -> .)
    CTE_I           reduce using rule 98 (fakebottom -> .)
    CTE_F           reduce using rule 98 (fakebottom -> .)
    CTE_CHAR        reduce using rule 98 (fakebottom -> .)
    MEDIA           reduce using rule 98 (fakebottom -> .)
    MODA            reduce using rule 98 (fakebottom -> .)
    VARIANZA        reduce using rule 98 (fakebottom -> .)
    DESV            reduce using rule 98 (fakebottom -> .)
    MEDIAN          reduce using rule 98 (fakebottom -> .)
    R_PAREN         reduce using rule 98 (fakebottom -> .)

    fakebottom                     shift and go to state 137

state 103

    (37) asignacion -> var_dim EQUAL stack_operator . expOr np_asignacion SEMICOLON
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    var_dim                        shift and go to state 117
    expOr                          shift and go to state 138
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    func_especial                  shift and go to state 118

state 104

    (78) factor -> L_PAREN . fakebottom expOr R_PAREN checkparentesis
    (98) fakebottom -> .

    L_PAREN         reduce using rule 98 (fakebottom -> .)
    ID              reduce using rule 98 (fakebottom -> .)
    CTE_I           reduce using rule 98 (fakebottom -> .)
    CTE_F           reduce using rule 98 (fakebottom -> .)
    CTE_CHAR        reduce using rule 98 (fakebottom -> .)
    MEDIA           reduce using rule 98 (fakebottom -> .)
    MODA            reduce using rule 98 (fakebottom -> .)
    VARIANZA        reduce using rule 98 (fakebottom -> .)
    DESV            reduce using rule 98 (fakebottom -> .)
    MEDIAN          reduce using rule 98 (fakebottom -> .)

    fakebottom                     shift and go to state 139

state 105

    (51) condicion -> IF L_PAREN expOr . R_PAREN GotoF THEN bloque else_aux

    R_PAREN         shift and go to state 140


state 106

    (59) expOr -> expAnd . checkAndOr OR stack_operator expOr
    (60) expOr -> expAnd . checkAndOr
    (100) checkAndOr -> .

    OR              reduce using rule 100 (checkAndOr -> .)
    R_PAREN         reduce using rule 100 (checkAndOr -> .)
    COMMA           reduce using rule 100 (checkAndOr -> .)
    SEMICOLON       reduce using rule 100 (checkAndOr -> .)
    R_BRACKET       reduce using rule 100 (checkAndOr -> .)

    checkAndOr                     shift and go to state 141

state 107

    (61) expAnd -> expresion . checkAndOr AND stack_operator expAnd
    (62) expAnd -> expresion . checkAndOr
    (100) checkAndOr -> .

    AND             reduce using rule 100 (checkAndOr -> .)
    OR              reduce using rule 100 (checkAndOr -> .)
    R_PAREN         reduce using rule 100 (checkAndOr -> .)
    COMMA           reduce using rule 100 (checkAndOr -> .)
    SEMICOLON       reduce using rule 100 (checkAndOr -> .)
    R_BRACKET       reduce using rule 100 (checkAndOr -> .)

    checkAndOr                     shift and go to state 142

state 108

    (63) expresion -> exp . checkrelop relop
    (103) checkrelop -> .

    GT              reduce using rule 103 (checkrelop -> .)
    LT              reduce using rule 103 (checkrelop -> .)
    EQ              reduce using rule 103 (checkrelop -> .)
    LEQ             reduce using rule 103 (checkrelop -> .)
    GEQ             reduce using rule 103 (checkrelop -> .)
    AND             reduce using rule 103 (checkrelop -> .)
    OR              reduce using rule 103 (checkrelop -> .)
    R_PAREN         reduce using rule 103 (checkrelop -> .)
    COMMA           reduce using rule 103 (checkrelop -> .)
    SEMICOLON       reduce using rule 103 (checkrelop -> .)
    R_BRACKET       reduce using rule 103 (checkrelop -> .)

    checkrelop                     shift and go to state 143

state 109

    (70) exp -> termino . checkexp masmenos
    (102) checkexp -> .

    PLUS            reduce using rule 102 (checkexp -> .)
    MINUS           reduce using rule 102 (checkexp -> .)
    GT              reduce using rule 102 (checkexp -> .)
    LT              reduce using rule 102 (checkexp -> .)
    EQ              reduce using rule 102 (checkexp -> .)
    LEQ             reduce using rule 102 (checkexp -> .)
    GEQ             reduce using rule 102 (checkexp -> .)
    AND             reduce using rule 102 (checkexp -> .)
    OR              reduce using rule 102 (checkexp -> .)
    R_PAREN         reduce using rule 102 (checkexp -> .)
    COMMA           reduce using rule 102 (checkexp -> .)
    SEMICOLON       reduce using rule 102 (checkexp -> .)
    R_BRACKET       reduce using rule 102 (checkexp -> .)

    checkexp                       shift and go to state 144

state 110

    (74) termino -> factor . checkterm multdiv
    (101) checkterm -> .

    MULT            reduce using rule 101 (checkterm -> .)
    DIV             reduce using rule 101 (checkterm -> .)
    PLUS            reduce using rule 101 (checkterm -> .)
    MINUS           reduce using rule 101 (checkterm -> .)
    GT              reduce using rule 101 (checkterm -> .)
    LT              reduce using rule 101 (checkterm -> .)
    EQ              reduce using rule 101 (checkterm -> .)
    LEQ             reduce using rule 101 (checkterm -> .)
    GEQ             reduce using rule 101 (checkterm -> .)
    AND             reduce using rule 101 (checkterm -> .)
    OR              reduce using rule 101 (checkterm -> .)
    R_PAREN         reduce using rule 101 (checkterm -> .)
    COMMA           reduce using rule 101 (checkterm -> .)
    SEMICOLON       reduce using rule 101 (checkterm -> .)
    R_BRACKET       reduce using rule 101 (checkterm -> .)

    checkterm                      shift and go to state 145

state 111

    (79) factor -> var_cte .

    MULT            reduce using rule 79 (factor -> var_cte .)
    DIV             reduce using rule 79 (factor -> var_cte .)
    PLUS            reduce using rule 79 (factor -> var_cte .)
    MINUS           reduce using rule 79 (factor -> var_cte .)
    GT              reduce using rule 79 (factor -> var_cte .)
    LT              reduce using rule 79 (factor -> var_cte .)
    EQ              reduce using rule 79 (factor -> var_cte .)
    LEQ             reduce using rule 79 (factor -> var_cte .)
    GEQ             reduce using rule 79 (factor -> var_cte .)
    AND             reduce using rule 79 (factor -> var_cte .)
    OR              reduce using rule 79 (factor -> var_cte .)
    R_PAREN         reduce using rule 79 (factor -> var_cte .)
    COMMA           reduce using rule 79 (factor -> var_cte .)
    SEMICOLON       reduce using rule 79 (factor -> var_cte .)
    R_BRACKET       reduce using rule 79 (factor -> var_cte .)


state 112

    (80) var_cte -> ID . stack_operand_id
    (38) llamada -> ID . llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> ID . stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (93) stack_operand_id -> .
    (104) llamadaEra -> .

    L_BRACKET       reduce using rule 93 (stack_operand_id -> .)
    MULT            reduce using rule 93 (stack_operand_id -> .)
    DIV             reduce using rule 93 (stack_operand_id -> .)
    PLUS            reduce using rule 93 (stack_operand_id -> .)
    MINUS           reduce using rule 93 (stack_operand_id -> .)
    GT              reduce using rule 93 (stack_operand_id -> .)
    LT              reduce using rule 93 (stack_operand_id -> .)
    EQ              reduce using rule 93 (stack_operand_id -> .)
    LEQ             reduce using rule 93 (stack_operand_id -> .)
    GEQ             reduce using rule 93 (stack_operand_id -> .)
    AND             reduce using rule 93 (stack_operand_id -> .)
    OR              reduce using rule 93 (stack_operand_id -> .)
    R_PAREN         reduce using rule 93 (stack_operand_id -> .)
    COMMA           reduce using rule 93 (stack_operand_id -> .)
    SEMICOLON       reduce using rule 93 (stack_operand_id -> .)
    R_BRACKET       reduce using rule 93 (stack_operand_id -> .)
    L_PAREN         reduce using rule 104 (llamadaEra -> .)

    stack_operand_id               shift and go to state 146
    llamadaEra                     shift and go to state 90

state 113

    (81) var_cte -> llamada .

    MULT            reduce using rule 81 (var_cte -> llamada .)
    DIV             reduce using rule 81 (var_cte -> llamada .)
    PLUS            reduce using rule 81 (var_cte -> llamada .)
    MINUS           reduce using rule 81 (var_cte -> llamada .)
    GT              reduce using rule 81 (var_cte -> llamada .)
    LT              reduce using rule 81 (var_cte -> llamada .)
    EQ              reduce using rule 81 (var_cte -> llamada .)
    LEQ             reduce using rule 81 (var_cte -> llamada .)
    GEQ             reduce using rule 81 (var_cte -> llamada .)
    AND             reduce using rule 81 (var_cte -> llamada .)
    OR              reduce using rule 81 (var_cte -> llamada .)
    R_PAREN         reduce using rule 81 (var_cte -> llamada .)
    COMMA           reduce using rule 81 (var_cte -> llamada .)
    SEMICOLON       reduce using rule 81 (var_cte -> llamada .)
    R_BRACKET       reduce using rule 81 (var_cte -> llamada .)


state 114

    (82) var_cte -> CTE_I . stack_operand_int
    (94) stack_operand_int -> .

    MULT            reduce using rule 94 (stack_operand_int -> .)
    DIV             reduce using rule 94 (stack_operand_int -> .)
    PLUS            reduce using rule 94 (stack_operand_int -> .)
    MINUS           reduce using rule 94 (stack_operand_int -> .)
    GT              reduce using rule 94 (stack_operand_int -> .)
    LT              reduce using rule 94 (stack_operand_int -> .)
    EQ              reduce using rule 94 (stack_operand_int -> .)
    LEQ             reduce using rule 94 (stack_operand_int -> .)
    GEQ             reduce using rule 94 (stack_operand_int -> .)
    AND             reduce using rule 94 (stack_operand_int -> .)
    OR              reduce using rule 94 (stack_operand_int -> .)
    R_PAREN         reduce using rule 94 (stack_operand_int -> .)
    COMMA           reduce using rule 94 (stack_operand_int -> .)
    SEMICOLON       reduce using rule 94 (stack_operand_int -> .)
    R_BRACKET       reduce using rule 94 (stack_operand_int -> .)

    stack_operand_int              shift and go to state 147

state 115

    (83) var_cte -> CTE_F . stack_operand_float
    (95) stack_operand_float -> .

    MULT            reduce using rule 95 (stack_operand_float -> .)
    DIV             reduce using rule 95 (stack_operand_float -> .)
    PLUS            reduce using rule 95 (stack_operand_float -> .)
    MINUS           reduce using rule 95 (stack_operand_float -> .)
    GT              reduce using rule 95 (stack_operand_float -> .)
    LT              reduce using rule 95 (stack_operand_float -> .)
    EQ              reduce using rule 95 (stack_operand_float -> .)
    LEQ             reduce using rule 95 (stack_operand_float -> .)
    GEQ             reduce using rule 95 (stack_operand_float -> .)
    AND             reduce using rule 95 (stack_operand_float -> .)
    OR              reduce using rule 95 (stack_operand_float -> .)
    R_PAREN         reduce using rule 95 (stack_operand_float -> .)
    COMMA           reduce using rule 95 (stack_operand_float -> .)
    SEMICOLON       reduce using rule 95 (stack_operand_float -> .)
    R_BRACKET       reduce using rule 95 (stack_operand_float -> .)

    stack_operand_float            shift and go to state 148

state 116

    (84) var_cte -> CTE_CHAR . stack_operand_char
    (96) stack_operand_char -> .

    MULT            reduce using rule 96 (stack_operand_char -> .)
    DIV             reduce using rule 96 (stack_operand_char -> .)
    PLUS            reduce using rule 96 (stack_operand_char -> .)
    MINUS           reduce using rule 96 (stack_operand_char -> .)
    GT              reduce using rule 96 (stack_operand_char -> .)
    LT              reduce using rule 96 (stack_operand_char -> .)
    EQ              reduce using rule 96 (stack_operand_char -> .)
    LEQ             reduce using rule 96 (stack_operand_char -> .)
    GEQ             reduce using rule 96 (stack_operand_char -> .)
    AND             reduce using rule 96 (stack_operand_char -> .)
    OR              reduce using rule 96 (stack_operand_char -> .)
    R_PAREN         reduce using rule 96 (stack_operand_char -> .)
    COMMA           reduce using rule 96 (stack_operand_char -> .)
    SEMICOLON       reduce using rule 96 (stack_operand_char -> .)
    R_BRACKET       reduce using rule 96 (stack_operand_char -> .)

    stack_operand_char             shift and go to state 149

state 117

    (85) var_cte -> var_dim .

    MULT            reduce using rule 85 (var_cte -> var_dim .)
    DIV             reduce using rule 85 (var_cte -> var_dim .)
    PLUS            reduce using rule 85 (var_cte -> var_dim .)
    MINUS           reduce using rule 85 (var_cte -> var_dim .)
    GT              reduce using rule 85 (var_cte -> var_dim .)
    LT              reduce using rule 85 (var_cte -> var_dim .)
    EQ              reduce using rule 85 (var_cte -> var_dim .)
    LEQ             reduce using rule 85 (var_cte -> var_dim .)
    GEQ             reduce using rule 85 (var_cte -> var_dim .)
    AND             reduce using rule 85 (var_cte -> var_dim .)
    OR              reduce using rule 85 (var_cte -> var_dim .)
    R_PAREN         reduce using rule 85 (var_cte -> var_dim .)
    COMMA           reduce using rule 85 (var_cte -> var_dim .)
    SEMICOLON       reduce using rule 85 (var_cte -> var_dim .)
    R_BRACKET       reduce using rule 85 (var_cte -> var_dim .)


state 118

    (86) var_cte -> func_especial .

    MULT            reduce using rule 86 (var_cte -> func_especial .)
    DIV             reduce using rule 86 (var_cte -> func_especial .)
    PLUS            reduce using rule 86 (var_cte -> func_especial .)
    MINUS           reduce using rule 86 (var_cte -> func_especial .)
    GT              reduce using rule 86 (var_cte -> func_especial .)
    LT              reduce using rule 86 (var_cte -> func_especial .)
    EQ              reduce using rule 86 (var_cte -> func_especial .)
    LEQ             reduce using rule 86 (var_cte -> func_especial .)
    GEQ             reduce using rule 86 (var_cte -> func_especial .)
    AND             reduce using rule 86 (var_cte -> func_especial .)
    OR              reduce using rule 86 (var_cte -> func_especial .)
    R_PAREN         reduce using rule 86 (var_cte -> func_especial .)
    COMMA           reduce using rule 86 (var_cte -> func_especial .)
    SEMICOLON       reduce using rule 86 (var_cte -> func_especial .)
    R_BRACKET       reduce using rule 86 (var_cte -> func_especial .)


state 119

    (39) func_especial -> MEDIA . L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 150


state 120

    (40) func_especial -> MODA . L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 151


state 121

    (41) func_especial -> VARIANZA . L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 152


state 122

    (42) func_especial -> DESV . L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 153


state 123

    (43) func_especial -> MEDIAN . L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 154


state 124

    (46) escritura -> WRITE L_PAREN escritura_rep . R_PAREN SEMICOLON
    (47) escritura_rep -> escritura_rep . COMMA escritura_aux

    R_PAREN         shift and go to state 155
    COMMA           shift and go to state 156


state 125

    (48) escritura_rep -> escritura_aux .

    R_PAREN         reduce using rule 48 (escritura_rep -> escritura_aux .)
    COMMA           reduce using rule 48 (escritura_rep -> escritura_aux .)


state 126

    (49) escritura_aux -> CTE_S . printString
    (117) printString -> .

    R_PAREN         reduce using rule 117 (printString -> .)
    COMMA           reduce using rule 117 (printString -> .)

    printString                    shift and go to state 157

state 127

    (50) escritura_aux -> expOr . np_print
    (116) np_print -> .

    R_PAREN         reduce using rule 116 (np_print -> .)
    COMMA           reduce using rule 116 (np_print -> .)

    np_print                       shift and go to state 158

state 128

    (44) retorno -> RETURN L_PAREN expOr . np_return R_PAREN SEMICOLON
    (106) np_return -> .

    R_PAREN         reduce using rule 106 (np_return -> .)

    np_return                      shift and go to state 159

state 129

    (45) lectura -> READ L_PAREN ID . np_read R_PAREN SEMICOLON
    (118) np_read -> .

    R_PAREN         reduce using rule 118 (np_read -> .)

    np_read                        shift and go to state 160

state 130

    (54) repeticion -> WHILE addJump L_PAREN . expOr R_PAREN GotoF DO bloque end_while
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 161
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 131

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump . estatuto_rep R_BRACE endFunc
    (27) estatuto_rep -> . estatuto estatuto_rep
    (28) estatuto_rep -> . empty
    (29) estatuto -> . asignacion
    (30) estatuto -> . condicion
    (31) estatuto -> . escritura
    (32) estatuto -> . llamada
    (33) estatuto -> . retorno
    (34) estatuto -> . lectura
    (35) estatuto -> . repeticion
    (88) empty -> .
    (36) asignacion -> . ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON
    (37) asignacion -> . var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON
    (51) condicion -> . IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux
    (46) escritura -> . WRITE L_PAREN escritura_rep R_PAREN SEMICOLON
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (44) retorno -> . RETURN L_PAREN expOr np_return R_PAREN SEMICOLON
    (45) lectura -> . READ L_PAREN ID np_read R_PAREN SEMICOLON
    (54) repeticion -> . WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim

    R_BRACE         reduce using rule 88 (empty -> .)
    ID              shift and go to state 77
    IF              shift and go to state 79
    WRITE           shift and go to state 80
    RETURN          shift and go to state 81
    READ            shift and go to state 82
    WHILE           shift and go to state 83

    estatuto_rep                   shift and go to state 162
    estatuto                       shift and go to state 68
    empty                          shift and go to state 69
    asignacion                     shift and go to state 70
    condicion                      shift and go to state 71
    escritura                      shift and go to state 72
    llamada                        shift and go to state 73
    retorno                        shift and go to state 74
    lectura                        shift and go to state 75
    repeticion                     shift and go to state 76
    var_dim                        shift and go to state 78

state 132

    (21) params -> tipo ID addvar updateParams params2 .

    R_PAREN         reduce using rule 21 (params -> tipo ID addvar updateParams params2 .)


state 133

    (23) params2 -> COMMA . tipo ID addvar updateParams params2
    (9) tipo -> . INT current_type
    (10) tipo -> . FLOAT current_type
    (11) tipo -> . BOOL current_type
    (12) tipo -> . CHAR current_type

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    BOOL            shift and go to state 18
    CHAR            shift and go to state 19

    tipo                           shift and go to state 163

state 134

    (24) params2 -> empty .

    R_PAREN         reduce using rule 24 (params2 -> empty .)


state 135

    (36) asignacion -> ID stack_operand_id EQUAL stack_operator . expOr np_asignacion SEMICOLON
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 164
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 136

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim . fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (98) fakebottom -> .

    L_PAREN         reduce using rule 98 (fakebottom -> .)
    ID              reduce using rule 98 (fakebottom -> .)
    CTE_I           reduce using rule 98 (fakebottom -> .)
    CTE_F           reduce using rule 98 (fakebottom -> .)
    CTE_CHAR        reduce using rule 98 (fakebottom -> .)
    MEDIA           reduce using rule 98 (fakebottom -> .)
    MODA            reduce using rule 98 (fakebottom -> .)
    VARIANZA        reduce using rule 98 (fakebottom -> .)
    DESV            reduce using rule 98 (fakebottom -> .)
    MEDIAN          reduce using rule 98 (fakebottom -> .)

    fakebottom                     shift and go to state 165

state 137

    (38) llamada -> ID llamadaEra L_PAREN fakebottom . parm checkParamNum R_PAREN checkparentesis Gosub
    (55) parm -> . expOr checkParam parm2
    (56) parm -> . empty
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (88) empty -> .
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    R_PAREN         reduce using rule 88 (empty -> .)
    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    parm                           shift and go to state 166
    expOr                          shift and go to state 167
    empty                          shift and go to state 168
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 138

    (37) asignacion -> var_dim EQUAL stack_operator expOr . np_asignacion SEMICOLON
    (105) np_asignacion -> .

    SEMICOLON       reduce using rule 105 (np_asignacion -> .)

    np_asignacion                  shift and go to state 169

state 139

    (78) factor -> L_PAREN fakebottom . expOr R_PAREN checkparentesis
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 170
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 140

    (51) condicion -> IF L_PAREN expOr R_PAREN . GotoF THEN bloque else_aux
    (107) GotoF -> .

    THEN            reduce using rule 107 (GotoF -> .)

    GotoF                          shift and go to state 171

state 141

    (59) expOr -> expAnd checkAndOr . OR stack_operator expOr
    (60) expOr -> expAnd checkAndOr .

    OR              shift and go to state 172
    R_PAREN         reduce using rule 60 (expOr -> expAnd checkAndOr .)
    COMMA           reduce using rule 60 (expOr -> expAnd checkAndOr .)
    SEMICOLON       reduce using rule 60 (expOr -> expAnd checkAndOr .)
    R_BRACKET       reduce using rule 60 (expOr -> expAnd checkAndOr .)


state 142

    (61) expAnd -> expresion checkAndOr . AND stack_operator expAnd
    (62) expAnd -> expresion checkAndOr .

    AND             shift and go to state 173
    OR              reduce using rule 62 (expAnd -> expresion checkAndOr .)
    R_PAREN         reduce using rule 62 (expAnd -> expresion checkAndOr .)
    COMMA           reduce using rule 62 (expAnd -> expresion checkAndOr .)
    SEMICOLON       reduce using rule 62 (expAnd -> expresion checkAndOr .)
    R_BRACKET       reduce using rule 62 (expAnd -> expresion checkAndOr .)


state 143

    (63) expresion -> exp checkrelop . relop
    (64) relop -> . GT stack_operator expresion
    (65) relop -> . LT stack_operator expresion
    (66) relop -> . EQ stack_operator expresion
    (67) relop -> . LEQ stack_operator expresion
    (68) relop -> . GEQ stack_operator expresion
    (69) relop -> . empty
    (88) empty -> .

    GT              shift and go to state 175
    LT              shift and go to state 176
    EQ              shift and go to state 177
    LEQ             shift and go to state 178
    GEQ             shift and go to state 179
    AND             reduce using rule 88 (empty -> .)
    OR              reduce using rule 88 (empty -> .)
    R_PAREN         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    SEMICOLON       reduce using rule 88 (empty -> .)
    R_BRACKET       reduce using rule 88 (empty -> .)

    relop                          shift and go to state 174
    empty                          shift and go to state 180

state 144

    (70) exp -> termino checkexp . masmenos
    (71) masmenos -> . PLUS stack_operator exp
    (72) masmenos -> . MINUS stack_operator exp
    (73) masmenos -> . empty
    (88) empty -> .

    PLUS            shift and go to state 182
    MINUS           shift and go to state 183
    GT              reduce using rule 88 (empty -> .)
    LT              reduce using rule 88 (empty -> .)
    EQ              reduce using rule 88 (empty -> .)
    LEQ             reduce using rule 88 (empty -> .)
    GEQ             reduce using rule 88 (empty -> .)
    AND             reduce using rule 88 (empty -> .)
    OR              reduce using rule 88 (empty -> .)
    R_PAREN         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    SEMICOLON       reduce using rule 88 (empty -> .)
    R_BRACKET       reduce using rule 88 (empty -> .)

    masmenos                       shift and go to state 181
    empty                          shift and go to state 184

state 145

    (74) termino -> factor checkterm . multdiv
    (75) multdiv -> . MULT stack_operator termino
    (76) multdiv -> . DIV stack_operator termino
    (77) multdiv -> . empty
    (88) empty -> .

    MULT            shift and go to state 186
    DIV             shift and go to state 187
    PLUS            reduce using rule 88 (empty -> .)
    MINUS           reduce using rule 88 (empty -> .)
    GT              reduce using rule 88 (empty -> .)
    LT              reduce using rule 88 (empty -> .)
    EQ              reduce using rule 88 (empty -> .)
    LEQ             reduce using rule 88 (empty -> .)
    GEQ             reduce using rule 88 (empty -> .)
    AND             reduce using rule 88 (empty -> .)
    OR              reduce using rule 88 (empty -> .)
    R_PAREN         reduce using rule 88 (empty -> .)
    COMMA           reduce using rule 88 (empty -> .)
    SEMICOLON       reduce using rule 88 (empty -> .)
    R_BRACKET       reduce using rule 88 (empty -> .)

    multdiv                        shift and go to state 185
    empty                          shift and go to state 188

state 146

    (80) var_cte -> ID stack_operand_id .
    (87) var_dim -> ID stack_operand_id . L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim

    MULT            reduce using rule 80 (var_cte -> ID stack_operand_id .)
    DIV             reduce using rule 80 (var_cte -> ID stack_operand_id .)
    PLUS            reduce using rule 80 (var_cte -> ID stack_operand_id .)
    MINUS           reduce using rule 80 (var_cte -> ID stack_operand_id .)
    GT              reduce using rule 80 (var_cte -> ID stack_operand_id .)
    LT              reduce using rule 80 (var_cte -> ID stack_operand_id .)
    EQ              reduce using rule 80 (var_cte -> ID stack_operand_id .)
    LEQ             reduce using rule 80 (var_cte -> ID stack_operand_id .)
    GEQ             reduce using rule 80 (var_cte -> ID stack_operand_id .)
    AND             reduce using rule 80 (var_cte -> ID stack_operand_id .)
    OR              reduce using rule 80 (var_cte -> ID stack_operand_id .)
    R_PAREN         reduce using rule 80 (var_cte -> ID stack_operand_id .)
    COMMA           reduce using rule 80 (var_cte -> ID stack_operand_id .)
    SEMICOLON       reduce using rule 80 (var_cte -> ID stack_operand_id .)
    R_BRACKET       reduce using rule 80 (var_cte -> ID stack_operand_id .)
    L_BRACKET       shift and go to state 101


state 147

    (82) var_cte -> CTE_I stack_operand_int .

    MULT            reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    DIV             reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    PLUS            reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    MINUS           reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    GT              reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    LT              reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    EQ              reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    LEQ             reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    GEQ             reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    AND             reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    OR              reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    R_PAREN         reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    COMMA           reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    SEMICOLON       reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)
    R_BRACKET       reduce using rule 82 (var_cte -> CTE_I stack_operand_int .)


state 148

    (83) var_cte -> CTE_F stack_operand_float .

    MULT            reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    DIV             reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    PLUS            reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    MINUS           reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    GT              reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    LT              reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    EQ              reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    LEQ             reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    GEQ             reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    AND             reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    OR              reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    R_PAREN         reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    COMMA           reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    SEMICOLON       reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)
    R_BRACKET       reduce using rule 83 (var_cte -> CTE_F stack_operand_float .)


state 149

    (84) var_cte -> CTE_CHAR stack_operand_char .

    MULT            reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    DIV             reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    PLUS            reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    MINUS           reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    GT              reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    LT              reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    EQ              reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    LEQ             reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    GEQ             reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    AND             reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    OR              reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    R_PAREN         reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    COMMA           reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    SEMICOLON       reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)
    R_BRACKET       reduce using rule 84 (var_cte -> CTE_CHAR stack_operand_char .)


state 150

    (39) func_especial -> MEDIA L_PAREN . ID np_funcSpec R_PAREN

    ID              shift and go to state 189


state 151

    (40) func_especial -> MODA L_PAREN . ID np_funcSpec R_PAREN

    ID              shift and go to state 190


state 152

    (41) func_especial -> VARIANZA L_PAREN . ID np_funcSpec R_PAREN

    ID              shift and go to state 191


state 153

    (42) func_especial -> DESV L_PAREN . ID np_funcSpec R_PAREN

    ID              shift and go to state 192


state 154

    (43) func_especial -> MEDIAN L_PAREN . ID np_funcSpec R_PAREN

    ID              shift and go to state 193


state 155

    (46) escritura -> WRITE L_PAREN escritura_rep R_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 156

    (47) escritura_rep -> escritura_rep COMMA . escritura_aux
    (49) escritura_aux -> . CTE_S printString
    (50) escritura_aux -> . expOr np_print
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    CTE_S           shift and go to state 126
    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    escritura_aux                  shift and go to state 195
    expOr                          shift and go to state 127
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 157

    (49) escritura_aux -> CTE_S printString .

    R_PAREN         reduce using rule 49 (escritura_aux -> CTE_S printString .)
    COMMA           reduce using rule 49 (escritura_aux -> CTE_S printString .)


state 158

    (50) escritura_aux -> expOr np_print .

    R_PAREN         reduce using rule 50 (escritura_aux -> expOr np_print .)
    COMMA           reduce using rule 50 (escritura_aux -> expOr np_print .)


state 159

    (44) retorno -> RETURN L_PAREN expOr np_return . R_PAREN SEMICOLON

    R_PAREN         shift and go to state 196


state 160

    (45) lectura -> READ L_PAREN ID np_read . R_PAREN SEMICOLON

    R_PAREN         shift and go to state 197


state 161

    (54) repeticion -> WHILE addJump L_PAREN expOr . R_PAREN GotoF DO bloque end_while

    R_PAREN         shift and go to state 198


state 162

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep . R_BRACE endFunc

    R_BRACE         shift and go to state 199


state 163

    (23) params2 -> COMMA tipo . ID addvar updateParams params2

    ID              shift and go to state 200


state 164

    (36) asignacion -> ID stack_operand_id EQUAL stack_operator expOr . np_asignacion SEMICOLON
    (105) np_asignacion -> .

    SEMICOLON       reduce using rule 105 (np_asignacion -> .)

    np_asignacion                  shift and go to state 201

state 165

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom . expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 202
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 166

    (38) llamada -> ID llamadaEra L_PAREN fakebottom parm . checkParamNum R_PAREN checkparentesis Gosub
    (123) checkParamNum -> .

    R_PAREN         reduce using rule 123 (checkParamNum -> .)

    checkParamNum                  shift and go to state 203

state 167

    (55) parm -> expOr . checkParam parm2
    (122) checkParam -> .

    COMMA           reduce using rule 122 (checkParam -> .)
    R_PAREN         reduce using rule 122 (checkParam -> .)

    checkParam                     shift and go to state 204

state 168

    (56) parm -> empty .

    R_PAREN         reduce using rule 56 (parm -> empty .)


state 169

    (37) asignacion -> var_dim EQUAL stack_operator expOr np_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 205


state 170

    (78) factor -> L_PAREN fakebottom expOr . R_PAREN checkparentesis

    R_PAREN         shift and go to state 206


state 171

    (51) condicion -> IF L_PAREN expOr R_PAREN GotoF . THEN bloque else_aux

    THEN            shift and go to state 207


state 172

    (59) expOr -> expAnd checkAndOr OR . stack_operator expOr
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 208

state 173

    (61) expAnd -> expresion checkAndOr AND . stack_operator expAnd
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 209

state 174

    (63) expresion -> exp checkrelop relop .

    AND             reduce using rule 63 (expresion -> exp checkrelop relop .)
    OR              reduce using rule 63 (expresion -> exp checkrelop relop .)
    R_PAREN         reduce using rule 63 (expresion -> exp checkrelop relop .)
    COMMA           reduce using rule 63 (expresion -> exp checkrelop relop .)
    SEMICOLON       reduce using rule 63 (expresion -> exp checkrelop relop .)
    R_BRACKET       reduce using rule 63 (expresion -> exp checkrelop relop .)


state 175

    (64) relop -> GT . stack_operator expresion
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 210

state 176

    (65) relop -> LT . stack_operator expresion
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 211

state 177

    (66) relop -> EQ . stack_operator expresion
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 212

state 178

    (67) relop -> LEQ . stack_operator expresion
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 213

state 179

    (68) relop -> GEQ . stack_operator expresion
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 214

state 180

    (69) relop -> empty .

    AND             reduce using rule 69 (relop -> empty .)
    OR              reduce using rule 69 (relop -> empty .)
    R_PAREN         reduce using rule 69 (relop -> empty .)
    COMMA           reduce using rule 69 (relop -> empty .)
    SEMICOLON       reduce using rule 69 (relop -> empty .)
    R_BRACKET       reduce using rule 69 (relop -> empty .)


state 181

    (70) exp -> termino checkexp masmenos .

    GT              reduce using rule 70 (exp -> termino checkexp masmenos .)
    LT              reduce using rule 70 (exp -> termino checkexp masmenos .)
    EQ              reduce using rule 70 (exp -> termino checkexp masmenos .)
    LEQ             reduce using rule 70 (exp -> termino checkexp masmenos .)
    GEQ             reduce using rule 70 (exp -> termino checkexp masmenos .)
    AND             reduce using rule 70 (exp -> termino checkexp masmenos .)
    OR              reduce using rule 70 (exp -> termino checkexp masmenos .)
    R_PAREN         reduce using rule 70 (exp -> termino checkexp masmenos .)
    COMMA           reduce using rule 70 (exp -> termino checkexp masmenos .)
    SEMICOLON       reduce using rule 70 (exp -> termino checkexp masmenos .)
    R_BRACKET       reduce using rule 70 (exp -> termino checkexp masmenos .)


state 182

    (71) masmenos -> PLUS . stack_operator exp
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 215

state 183

    (72) masmenos -> MINUS . stack_operator exp
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 216

state 184

    (73) masmenos -> empty .

    GT              reduce using rule 73 (masmenos -> empty .)
    LT              reduce using rule 73 (masmenos -> empty .)
    EQ              reduce using rule 73 (masmenos -> empty .)
    LEQ             reduce using rule 73 (masmenos -> empty .)
    GEQ             reduce using rule 73 (masmenos -> empty .)
    AND             reduce using rule 73 (masmenos -> empty .)
    OR              reduce using rule 73 (masmenos -> empty .)
    R_PAREN         reduce using rule 73 (masmenos -> empty .)
    COMMA           reduce using rule 73 (masmenos -> empty .)
    SEMICOLON       reduce using rule 73 (masmenos -> empty .)
    R_BRACKET       reduce using rule 73 (masmenos -> empty .)


state 185

    (74) termino -> factor checkterm multdiv .

    PLUS            reduce using rule 74 (termino -> factor checkterm multdiv .)
    MINUS           reduce using rule 74 (termino -> factor checkterm multdiv .)
    GT              reduce using rule 74 (termino -> factor checkterm multdiv .)
    LT              reduce using rule 74 (termino -> factor checkterm multdiv .)
    EQ              reduce using rule 74 (termino -> factor checkterm multdiv .)
    LEQ             reduce using rule 74 (termino -> factor checkterm multdiv .)
    GEQ             reduce using rule 74 (termino -> factor checkterm multdiv .)
    AND             reduce using rule 74 (termino -> factor checkterm multdiv .)
    OR              reduce using rule 74 (termino -> factor checkterm multdiv .)
    R_PAREN         reduce using rule 74 (termino -> factor checkterm multdiv .)
    COMMA           reduce using rule 74 (termino -> factor checkterm multdiv .)
    SEMICOLON       reduce using rule 74 (termino -> factor checkterm multdiv .)
    R_BRACKET       reduce using rule 74 (termino -> factor checkterm multdiv .)


state 186

    (75) multdiv -> MULT . stack_operator termino
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 217

state 187

    (76) multdiv -> DIV . stack_operator termino
    (97) stack_operator -> .

    L_PAREN         reduce using rule 97 (stack_operator -> .)
    ID              reduce using rule 97 (stack_operator -> .)
    CTE_I           reduce using rule 97 (stack_operator -> .)
    CTE_F           reduce using rule 97 (stack_operator -> .)
    CTE_CHAR        reduce using rule 97 (stack_operator -> .)
    MEDIA           reduce using rule 97 (stack_operator -> .)
    MODA            reduce using rule 97 (stack_operator -> .)
    VARIANZA        reduce using rule 97 (stack_operator -> .)
    DESV            reduce using rule 97 (stack_operator -> .)
    MEDIAN          reduce using rule 97 (stack_operator -> .)

    stack_operator                 shift and go to state 218

state 188

    (77) multdiv -> empty .

    PLUS            reduce using rule 77 (multdiv -> empty .)
    MINUS           reduce using rule 77 (multdiv -> empty .)
    GT              reduce using rule 77 (multdiv -> empty .)
    LT              reduce using rule 77 (multdiv -> empty .)
    EQ              reduce using rule 77 (multdiv -> empty .)
    LEQ             reduce using rule 77 (multdiv -> empty .)
    GEQ             reduce using rule 77 (multdiv -> empty .)
    AND             reduce using rule 77 (multdiv -> empty .)
    OR              reduce using rule 77 (multdiv -> empty .)
    R_PAREN         reduce using rule 77 (multdiv -> empty .)
    COMMA           reduce using rule 77 (multdiv -> empty .)
    SEMICOLON       reduce using rule 77 (multdiv -> empty .)
    R_BRACKET       reduce using rule 77 (multdiv -> empty .)


state 189

    (39) func_especial -> MEDIA L_PAREN ID . np_funcSpec R_PAREN
    (119) np_funcSpec -> .

    R_PAREN         reduce using rule 119 (np_funcSpec -> .)

    np_funcSpec                    shift and go to state 219

state 190

    (40) func_especial -> MODA L_PAREN ID . np_funcSpec R_PAREN
    (119) np_funcSpec -> .

    R_PAREN         reduce using rule 119 (np_funcSpec -> .)

    np_funcSpec                    shift and go to state 220

state 191

    (41) func_especial -> VARIANZA L_PAREN ID . np_funcSpec R_PAREN
    (119) np_funcSpec -> .

    R_PAREN         reduce using rule 119 (np_funcSpec -> .)

    np_funcSpec                    shift and go to state 221

state 192

    (42) func_especial -> DESV L_PAREN ID . np_funcSpec R_PAREN
    (119) np_funcSpec -> .

    R_PAREN         reduce using rule 119 (np_funcSpec -> .)

    np_funcSpec                    shift and go to state 222

state 193

    (43) func_especial -> MEDIAN L_PAREN ID . np_funcSpec R_PAREN
    (119) np_funcSpec -> .

    R_PAREN         reduce using rule 119 (np_funcSpec -> .)

    np_funcSpec                    shift and go to state 223

state 194

    (46) escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .

    ID              reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    IF              reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    WRITE           reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    RETURN          reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    READ            reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    WHILE           reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)
    R_BRACE         reduce using rule 46 (escritura -> WRITE L_PAREN escritura_rep R_PAREN SEMICOLON .)


state 195

    (47) escritura_rep -> escritura_rep COMMA escritura_aux .

    R_PAREN         reduce using rule 47 (escritura_rep -> escritura_rep COMMA escritura_aux .)
    COMMA           reduce using rule 47 (escritura_rep -> escritura_rep COMMA escritura_aux .)


state 196

    (44) retorno -> RETURN L_PAREN expOr np_return R_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 197

    (45) lectura -> READ L_PAREN ID np_read R_PAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 198

    (54) repeticion -> WHILE addJump L_PAREN expOr R_PAREN . GotoF DO bloque end_while
    (107) GotoF -> .

    DO              reduce using rule 107 (GotoF -> .)

    GotoF                          shift and go to state 226

state 199

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE . endFunc
    (112) endFunc -> .

    FUNCTION        reduce using rule 112 (endFunc -> .)
    MAIN            reduce using rule 112 (endFunc -> .)

    endFunc                        shift and go to state 227

state 200

    (23) params2 -> COMMA tipo ID . addvar updateParams params2
    (91) addvar -> .

    COMMA           reduce using rule 91 (addvar -> .)
    R_PAREN         reduce using rule 91 (addvar -> .)

    addvar                         shift and go to state 228

state 201

    (36) asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 229


state 202

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr . cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (129) cuadVer -> .

    R_BRACKET       reduce using rule 129 (cuadVer -> .)

    cuadVer                        shift and go to state 230

state 203

    (38) llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum . R_PAREN checkparentesis Gosub

    R_PAREN         shift and go to state 231


state 204

    (55) parm -> expOr checkParam . parm2
    (57) parm2 -> . COMMA expOr checkParam parm2
    (58) parm2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 233
    R_PAREN         reduce using rule 88 (empty -> .)

    parm2                          shift and go to state 232
    empty                          shift and go to state 234

state 205

    (37) asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .

    ID              reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    IF              reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    WRITE           reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    RETURN          reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    READ            reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    WHILE           reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    R_BRACE         reduce using rule 37 (asignacion -> var_dim EQUAL stack_operator expOr np_asignacion SEMICOLON .)


state 206

    (78) factor -> L_PAREN fakebottom expOr R_PAREN . checkparentesis
    (99) checkparentesis -> .

    MULT            reduce using rule 99 (checkparentesis -> .)
    DIV             reduce using rule 99 (checkparentesis -> .)
    PLUS            reduce using rule 99 (checkparentesis -> .)
    MINUS           reduce using rule 99 (checkparentesis -> .)
    GT              reduce using rule 99 (checkparentesis -> .)
    LT              reduce using rule 99 (checkparentesis -> .)
    EQ              reduce using rule 99 (checkparentesis -> .)
    LEQ             reduce using rule 99 (checkparentesis -> .)
    GEQ             reduce using rule 99 (checkparentesis -> .)
    AND             reduce using rule 99 (checkparentesis -> .)
    OR              reduce using rule 99 (checkparentesis -> .)
    R_PAREN         reduce using rule 99 (checkparentesis -> .)
    COMMA           reduce using rule 99 (checkparentesis -> .)
    SEMICOLON       reduce using rule 99 (checkparentesis -> .)
    R_BRACKET       reduce using rule 99 (checkparentesis -> .)

    checkparentesis                shift and go to state 235

state 207

    (51) condicion -> IF L_PAREN expOr R_PAREN GotoF THEN . bloque else_aux
    (26) bloque -> . L_BRACE estatuto_rep R_BRACE

    L_BRACE         shift and go to state 61

    bloque                         shift and go to state 236

state 208

    (59) expOr -> expAnd checkAndOr OR stack_operator . expOr
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expAnd                         shift and go to state 106
    expOr                          shift and go to state 237
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 209

    (61) expAnd -> expresion checkAndOr AND stack_operator . expAnd
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 107
    expAnd                         shift and go to state 238
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 210

    (64) relop -> GT stack_operator . expresion
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 239
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 211

    (65) relop -> LT stack_operator . expresion
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 240
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 212

    (66) relop -> EQ stack_operator . expresion
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 241
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 213

    (67) relop -> LEQ stack_operator . expresion
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 242
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 214

    (68) relop -> GEQ stack_operator . expresion
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expresion                      shift and go to state 243
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 215

    (71) masmenos -> PLUS stack_operator . exp
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    exp                            shift and go to state 244
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 216

    (72) masmenos -> MINUS stack_operator . exp
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    exp                            shift and go to state 245
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 217

    (75) multdiv -> MULT stack_operator . termino
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    termino                        shift and go to state 246
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 218

    (76) multdiv -> DIV stack_operator . termino
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    termino                        shift and go to state 247
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 219

    (39) func_especial -> MEDIA L_PAREN ID np_funcSpec . R_PAREN

    R_PAREN         shift and go to state 248


state 220

    (40) func_especial -> MODA L_PAREN ID np_funcSpec . R_PAREN

    R_PAREN         shift and go to state 249


state 221

    (41) func_especial -> VARIANZA L_PAREN ID np_funcSpec . R_PAREN

    R_PAREN         shift and go to state 250


state 222

    (42) func_especial -> DESV L_PAREN ID np_funcSpec . R_PAREN

    R_PAREN         shift and go to state 251


state 223

    (43) func_especial -> MEDIAN L_PAREN ID np_funcSpec . R_PAREN

    R_PAREN         shift and go to state 252


state 224

    (44) retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .

    ID              reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    IF              reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    WRITE           reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    RETURN          reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    READ            reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    WHILE           reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)
    R_BRACE         reduce using rule 44 (retorno -> RETURN L_PAREN expOr np_return R_PAREN SEMICOLON .)


state 225

    (45) lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .

    ID              reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    IF              reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    WRITE           reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    RETURN          reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    READ            reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    WHILE           reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)
    R_BRACE         reduce using rule 45 (lectura -> READ L_PAREN ID np_read R_PAREN SEMICOLON .)


state 226

    (54) repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF . DO bloque end_while

    DO              shift and go to state 253


state 227

    (13) func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc .

    FUNCTION        reduce using rule 13 (func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc .)
    MAIN            reduce using rule 13 (func -> FUNCTION tipo_func ID addfunc L_PAREN params R_PAREN vars2 L_BRACE funcJump estatuto_rep R_BRACE endFunc .)


state 228

    (23) params2 -> COMMA tipo ID addvar . updateParams params2
    (113) updateParams -> .

    COMMA           reduce using rule 113 (updateParams -> .)
    R_PAREN         reduce using rule 113 (updateParams -> .)

    updateParams                   shift and go to state 254

state 229

    (36) asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .

    ID              reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    IF              reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    WRITE           reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    RETURN          reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    READ            reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    WHILE           reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)
    R_BRACE         reduce using rule 36 (asignacion -> ID stack_operand_id EQUAL stack_operator expOr np_asignacion SEMICOLON .)


state 230

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer . R_BRACKET checkparentesis verDimNum cuadVarDim

    R_BRACKET       shift and go to state 255


state 231

    (38) llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN . checkparentesis Gosub
    (99) checkparentesis -> .

    ID              reduce using rule 99 (checkparentesis -> .)
    IF              reduce using rule 99 (checkparentesis -> .)
    WRITE           reduce using rule 99 (checkparentesis -> .)
    RETURN          reduce using rule 99 (checkparentesis -> .)
    READ            reduce using rule 99 (checkparentesis -> .)
    WHILE           reduce using rule 99 (checkparentesis -> .)
    R_BRACE         reduce using rule 99 (checkparentesis -> .)
    MULT            reduce using rule 99 (checkparentesis -> .)
    DIV             reduce using rule 99 (checkparentesis -> .)
    PLUS            reduce using rule 99 (checkparentesis -> .)
    MINUS           reduce using rule 99 (checkparentesis -> .)
    GT              reduce using rule 99 (checkparentesis -> .)
    LT              reduce using rule 99 (checkparentesis -> .)
    EQ              reduce using rule 99 (checkparentesis -> .)
    LEQ             reduce using rule 99 (checkparentesis -> .)
    GEQ             reduce using rule 99 (checkparentesis -> .)
    AND             reduce using rule 99 (checkparentesis -> .)
    OR              reduce using rule 99 (checkparentesis -> .)
    R_PAREN         reduce using rule 99 (checkparentesis -> .)
    COMMA           reduce using rule 99 (checkparentesis -> .)
    SEMICOLON       reduce using rule 99 (checkparentesis -> .)
    R_BRACKET       reduce using rule 99 (checkparentesis -> .)

    checkparentesis                shift and go to state 256

state 232

    (55) parm -> expOr checkParam parm2 .

    R_PAREN         reduce using rule 55 (parm -> expOr checkParam parm2 .)


state 233

    (57) parm2 -> COMMA . expOr checkParam parm2
    (59) expOr -> . expAnd checkAndOr OR stack_operator expOr
    (60) expOr -> . expAnd checkAndOr
    (61) expAnd -> . expresion checkAndOr AND stack_operator expAnd
    (62) expAnd -> . expresion checkAndOr
    (63) expresion -> . exp checkrelop relop
    (70) exp -> . termino checkexp masmenos
    (74) termino -> . factor checkterm multdiv
    (78) factor -> . L_PAREN fakebottom expOr R_PAREN checkparentesis
    (79) factor -> . var_cte
    (80) var_cte -> . ID stack_operand_id
    (81) var_cte -> . llamada
    (82) var_cte -> . CTE_I stack_operand_int
    (83) var_cte -> . CTE_F stack_operand_float
    (84) var_cte -> . CTE_CHAR stack_operand_char
    (85) var_cte -> . var_dim
    (86) var_cte -> . func_especial
    (38) llamada -> . ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub
    (87) var_dim -> . ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim
    (39) func_especial -> . MEDIA L_PAREN ID np_funcSpec R_PAREN
    (40) func_especial -> . MODA L_PAREN ID np_funcSpec R_PAREN
    (41) func_especial -> . VARIANZA L_PAREN ID np_funcSpec R_PAREN
    (42) func_especial -> . DESV L_PAREN ID np_funcSpec R_PAREN
    (43) func_especial -> . MEDIAN L_PAREN ID np_funcSpec R_PAREN

    L_PAREN         shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 114
    CTE_F           shift and go to state 115
    CTE_CHAR        shift and go to state 116
    MEDIA           shift and go to state 119
    MODA            shift and go to state 120
    VARIANZA        shift and go to state 121
    DESV            shift and go to state 122
    MEDIAN          shift and go to state 123

    expOr                          shift and go to state 257
    expAnd                         shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    var_cte                        shift and go to state 111
    llamada                        shift and go to state 113
    var_dim                        shift and go to state 117
    func_especial                  shift and go to state 118

state 234

    (58) parm2 -> empty .

    R_PAREN         reduce using rule 58 (parm2 -> empty .)


state 235

    (78) factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .

    MULT            reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    DIV             reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    PLUS            reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    MINUS           reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    GT              reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    LT              reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    EQ              reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    LEQ             reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    GEQ             reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    AND             reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    OR              reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    R_PAREN         reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    COMMA           reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    SEMICOLON       reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)
    R_BRACKET       reduce using rule 78 (factor -> L_PAREN fakebottom expOr R_PAREN checkparentesis .)


state 236

    (51) condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque . else_aux
    (52) else_aux -> . ELSE Goto bloque end_if
    (53) else_aux -> . end_if
    (109) end_if -> .

    ELSE            shift and go to state 259
    ID              reduce using rule 109 (end_if -> .)
    IF              reduce using rule 109 (end_if -> .)
    WRITE           reduce using rule 109 (end_if -> .)
    RETURN          reduce using rule 109 (end_if -> .)
    READ            reduce using rule 109 (end_if -> .)
    WHILE           reduce using rule 109 (end_if -> .)
    R_BRACE         reduce using rule 109 (end_if -> .)

    else_aux                       shift and go to state 258
    end_if                         shift and go to state 260

state 237

    (59) expOr -> expAnd checkAndOr OR stack_operator expOr .

    R_PAREN         reduce using rule 59 (expOr -> expAnd checkAndOr OR stack_operator expOr .)
    COMMA           reduce using rule 59 (expOr -> expAnd checkAndOr OR stack_operator expOr .)
    SEMICOLON       reduce using rule 59 (expOr -> expAnd checkAndOr OR stack_operator expOr .)
    R_BRACKET       reduce using rule 59 (expOr -> expAnd checkAndOr OR stack_operator expOr .)


state 238

    (61) expAnd -> expresion checkAndOr AND stack_operator expAnd .

    OR              reduce using rule 61 (expAnd -> expresion checkAndOr AND stack_operator expAnd .)
    R_PAREN         reduce using rule 61 (expAnd -> expresion checkAndOr AND stack_operator expAnd .)
    COMMA           reduce using rule 61 (expAnd -> expresion checkAndOr AND stack_operator expAnd .)
    SEMICOLON       reduce using rule 61 (expAnd -> expresion checkAndOr AND stack_operator expAnd .)
    R_BRACKET       reduce using rule 61 (expAnd -> expresion checkAndOr AND stack_operator expAnd .)


state 239

    (64) relop -> GT stack_operator expresion .

    AND             reduce using rule 64 (relop -> GT stack_operator expresion .)
    OR              reduce using rule 64 (relop -> GT stack_operator expresion .)
    R_PAREN         reduce using rule 64 (relop -> GT stack_operator expresion .)
    COMMA           reduce using rule 64 (relop -> GT stack_operator expresion .)
    SEMICOLON       reduce using rule 64 (relop -> GT stack_operator expresion .)
    R_BRACKET       reduce using rule 64 (relop -> GT stack_operator expresion .)


state 240

    (65) relop -> LT stack_operator expresion .

    AND             reduce using rule 65 (relop -> LT stack_operator expresion .)
    OR              reduce using rule 65 (relop -> LT stack_operator expresion .)
    R_PAREN         reduce using rule 65 (relop -> LT stack_operator expresion .)
    COMMA           reduce using rule 65 (relop -> LT stack_operator expresion .)
    SEMICOLON       reduce using rule 65 (relop -> LT stack_operator expresion .)
    R_BRACKET       reduce using rule 65 (relop -> LT stack_operator expresion .)


state 241

    (66) relop -> EQ stack_operator expresion .

    AND             reduce using rule 66 (relop -> EQ stack_operator expresion .)
    OR              reduce using rule 66 (relop -> EQ stack_operator expresion .)
    R_PAREN         reduce using rule 66 (relop -> EQ stack_operator expresion .)
    COMMA           reduce using rule 66 (relop -> EQ stack_operator expresion .)
    SEMICOLON       reduce using rule 66 (relop -> EQ stack_operator expresion .)
    R_BRACKET       reduce using rule 66 (relop -> EQ stack_operator expresion .)


state 242

    (67) relop -> LEQ stack_operator expresion .

    AND             reduce using rule 67 (relop -> LEQ stack_operator expresion .)
    OR              reduce using rule 67 (relop -> LEQ stack_operator expresion .)
    R_PAREN         reduce using rule 67 (relop -> LEQ stack_operator expresion .)
    COMMA           reduce using rule 67 (relop -> LEQ stack_operator expresion .)
    SEMICOLON       reduce using rule 67 (relop -> LEQ stack_operator expresion .)
    R_BRACKET       reduce using rule 67 (relop -> LEQ stack_operator expresion .)


state 243

    (68) relop -> GEQ stack_operator expresion .

    AND             reduce using rule 68 (relop -> GEQ stack_operator expresion .)
    OR              reduce using rule 68 (relop -> GEQ stack_operator expresion .)
    R_PAREN         reduce using rule 68 (relop -> GEQ stack_operator expresion .)
    COMMA           reduce using rule 68 (relop -> GEQ stack_operator expresion .)
    SEMICOLON       reduce using rule 68 (relop -> GEQ stack_operator expresion .)
    R_BRACKET       reduce using rule 68 (relop -> GEQ stack_operator expresion .)


state 244

    (71) masmenos -> PLUS stack_operator exp .

    GT              reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    LT              reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    EQ              reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    LEQ             reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    GEQ             reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    AND             reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    OR              reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    R_PAREN         reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    COMMA           reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    SEMICOLON       reduce using rule 71 (masmenos -> PLUS stack_operator exp .)
    R_BRACKET       reduce using rule 71 (masmenos -> PLUS stack_operator exp .)


state 245

    (72) masmenos -> MINUS stack_operator exp .

    GT              reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    LT              reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    EQ              reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    LEQ             reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    GEQ             reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    AND             reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    OR              reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    R_PAREN         reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    COMMA           reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    SEMICOLON       reduce using rule 72 (masmenos -> MINUS stack_operator exp .)
    R_BRACKET       reduce using rule 72 (masmenos -> MINUS stack_operator exp .)


state 246

    (75) multdiv -> MULT stack_operator termino .

    PLUS            reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    MINUS           reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    GT              reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    LT              reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    EQ              reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    LEQ             reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    GEQ             reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    AND             reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    OR              reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    R_PAREN         reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    COMMA           reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    SEMICOLON       reduce using rule 75 (multdiv -> MULT stack_operator termino .)
    R_BRACKET       reduce using rule 75 (multdiv -> MULT stack_operator termino .)


state 247

    (76) multdiv -> DIV stack_operator termino .

    PLUS            reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    MINUS           reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    GT              reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    LT              reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    EQ              reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    LEQ             reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    GEQ             reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    AND             reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    OR              reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    R_PAREN         reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    COMMA           reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    SEMICOLON       reduce using rule 76 (multdiv -> DIV stack_operator termino .)
    R_BRACKET       reduce using rule 76 (multdiv -> DIV stack_operator termino .)


state 248

    (39) func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .

    MULT            reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    DIV             reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    PLUS            reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    MINUS           reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    GT              reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    LT              reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    EQ              reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    LEQ             reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    GEQ             reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    AND             reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    OR              reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    R_PAREN         reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    COMMA           reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    SEMICOLON       reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)
    R_BRACKET       reduce using rule 39 (func_especial -> MEDIA L_PAREN ID np_funcSpec R_PAREN .)


state 249

    (40) func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .

    MULT            reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    DIV             reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    PLUS            reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    MINUS           reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    GT              reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    LT              reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    EQ              reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    LEQ             reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    GEQ             reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    AND             reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    OR              reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    R_PAREN         reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    COMMA           reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    SEMICOLON       reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)
    R_BRACKET       reduce using rule 40 (func_especial -> MODA L_PAREN ID np_funcSpec R_PAREN .)


state 250

    (41) func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .

    MULT            reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    DIV             reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    PLUS            reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    MINUS           reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    GT              reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    LT              reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    EQ              reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    LEQ             reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    GEQ             reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    AND             reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    OR              reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    R_PAREN         reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    COMMA           reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    SEMICOLON       reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)
    R_BRACKET       reduce using rule 41 (func_especial -> VARIANZA L_PAREN ID np_funcSpec R_PAREN .)


state 251

    (42) func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .

    MULT            reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    DIV             reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    PLUS            reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    MINUS           reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    GT              reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    LT              reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    EQ              reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    LEQ             reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    GEQ             reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    AND             reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    OR              reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    R_PAREN         reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    COMMA           reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    SEMICOLON       reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)
    R_BRACKET       reduce using rule 42 (func_especial -> DESV L_PAREN ID np_funcSpec R_PAREN .)


state 252

    (43) func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .

    MULT            reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    DIV             reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    PLUS            reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    MINUS           reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    GT              reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    LT              reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    EQ              reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    LEQ             reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    GEQ             reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    AND             reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    OR              reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    R_PAREN         reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    COMMA           reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    SEMICOLON       reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)
    R_BRACKET       reduce using rule 43 (func_especial -> MEDIAN L_PAREN ID np_funcSpec R_PAREN .)


state 253

    (54) repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO . bloque end_while
    (26) bloque -> . L_BRACE estatuto_rep R_BRACE

    L_BRACE         shift and go to state 61

    bloque                         shift and go to state 261

state 254

    (23) params2 -> COMMA tipo ID addvar updateParams . params2
    (23) params2 -> . COMMA tipo ID addvar updateParams params2
    (24) params2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 133
    R_PAREN         reduce using rule 88 (empty -> .)

    params2                        shift and go to state 262
    empty                          shift and go to state 134

state 255

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET . checkparentesis verDimNum cuadVarDim
    (99) checkparentesis -> .

    EQUAL           reduce using rule 99 (checkparentesis -> .)
    MULT            reduce using rule 99 (checkparentesis -> .)
    DIV             reduce using rule 99 (checkparentesis -> .)
    PLUS            reduce using rule 99 (checkparentesis -> .)
    MINUS           reduce using rule 99 (checkparentesis -> .)
    GT              reduce using rule 99 (checkparentesis -> .)
    LT              reduce using rule 99 (checkparentesis -> .)
    EQ              reduce using rule 99 (checkparentesis -> .)
    LEQ             reduce using rule 99 (checkparentesis -> .)
    GEQ             reduce using rule 99 (checkparentesis -> .)
    AND             reduce using rule 99 (checkparentesis -> .)
    OR              reduce using rule 99 (checkparentesis -> .)
    R_PAREN         reduce using rule 99 (checkparentesis -> .)
    COMMA           reduce using rule 99 (checkparentesis -> .)
    SEMICOLON       reduce using rule 99 (checkparentesis -> .)
    R_BRACKET       reduce using rule 99 (checkparentesis -> .)

    checkparentesis                shift and go to state 263

state 256

    (38) llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis . Gosub
    (124) Gosub -> .

    ID              reduce using rule 124 (Gosub -> .)
    IF              reduce using rule 124 (Gosub -> .)
    WRITE           reduce using rule 124 (Gosub -> .)
    RETURN          reduce using rule 124 (Gosub -> .)
    READ            reduce using rule 124 (Gosub -> .)
    WHILE           reduce using rule 124 (Gosub -> .)
    R_BRACE         reduce using rule 124 (Gosub -> .)
    MULT            reduce using rule 124 (Gosub -> .)
    DIV             reduce using rule 124 (Gosub -> .)
    PLUS            reduce using rule 124 (Gosub -> .)
    MINUS           reduce using rule 124 (Gosub -> .)
    GT              reduce using rule 124 (Gosub -> .)
    LT              reduce using rule 124 (Gosub -> .)
    EQ              reduce using rule 124 (Gosub -> .)
    LEQ             reduce using rule 124 (Gosub -> .)
    GEQ             reduce using rule 124 (Gosub -> .)
    AND             reduce using rule 124 (Gosub -> .)
    OR              reduce using rule 124 (Gosub -> .)
    R_PAREN         reduce using rule 124 (Gosub -> .)
    COMMA           reduce using rule 124 (Gosub -> .)
    SEMICOLON       reduce using rule 124 (Gosub -> .)
    R_BRACKET       reduce using rule 124 (Gosub -> .)

    Gosub                          shift and go to state 264

state 257

    (57) parm2 -> COMMA expOr . checkParam parm2
    (122) checkParam -> .

    COMMA           reduce using rule 122 (checkParam -> .)
    R_PAREN         reduce using rule 122 (checkParam -> .)

    checkParam                     shift and go to state 265

state 258

    (51) condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .

    ID              reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    IF              reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    WRITE           reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    RETURN          reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    READ            reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    WHILE           reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)
    R_BRACE         reduce using rule 51 (condicion -> IF L_PAREN expOr R_PAREN GotoF THEN bloque else_aux .)


state 259

    (52) else_aux -> ELSE . Goto bloque end_if
    (108) Goto -> .

    L_BRACE         reduce using rule 108 (Goto -> .)

    Goto                           shift and go to state 266

state 260

    (53) else_aux -> end_if .

    ID              reduce using rule 53 (else_aux -> end_if .)
    IF              reduce using rule 53 (else_aux -> end_if .)
    WRITE           reduce using rule 53 (else_aux -> end_if .)
    RETURN          reduce using rule 53 (else_aux -> end_if .)
    READ            reduce using rule 53 (else_aux -> end_if .)
    WHILE           reduce using rule 53 (else_aux -> end_if .)
    R_BRACE         reduce using rule 53 (else_aux -> end_if .)


state 261

    (54) repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque . end_while
    (110) end_while -> .

    ID              reduce using rule 110 (end_while -> .)
    IF              reduce using rule 110 (end_while -> .)
    WRITE           reduce using rule 110 (end_while -> .)
    RETURN          reduce using rule 110 (end_while -> .)
    READ            reduce using rule 110 (end_while -> .)
    WHILE           reduce using rule 110 (end_while -> .)
    R_BRACE         reduce using rule 110 (end_while -> .)

    end_while                      shift and go to state 267

state 262

    (23) params2 -> COMMA tipo ID addvar updateParams params2 .

    R_PAREN         reduce using rule 23 (params2 -> COMMA tipo ID addvar updateParams params2 .)


state 263

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis . verDimNum cuadVarDim
    (128) verDimNum -> .

    EQUAL           reduce using rule 128 (verDimNum -> .)
    MULT            reduce using rule 128 (verDimNum -> .)
    DIV             reduce using rule 128 (verDimNum -> .)
    PLUS            reduce using rule 128 (verDimNum -> .)
    MINUS           reduce using rule 128 (verDimNum -> .)
    GT              reduce using rule 128 (verDimNum -> .)
    LT              reduce using rule 128 (verDimNum -> .)
    EQ              reduce using rule 128 (verDimNum -> .)
    LEQ             reduce using rule 128 (verDimNum -> .)
    GEQ             reduce using rule 128 (verDimNum -> .)
    AND             reduce using rule 128 (verDimNum -> .)
    OR              reduce using rule 128 (verDimNum -> .)
    R_PAREN         reduce using rule 128 (verDimNum -> .)
    COMMA           reduce using rule 128 (verDimNum -> .)
    SEMICOLON       reduce using rule 128 (verDimNum -> .)
    R_BRACKET       reduce using rule 128 (verDimNum -> .)

    verDimNum                      shift and go to state 268

state 264

    (38) llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .

    ID              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    IF              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    WRITE           reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    RETURN          reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    READ            reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    WHILE           reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    R_BRACE         reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    MULT            reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    DIV             reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    PLUS            reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    MINUS           reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    GT              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    LT              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    EQ              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    LEQ             reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    GEQ             reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    AND             reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    OR              reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    R_PAREN         reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    COMMA           reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    SEMICOLON       reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)
    R_BRACKET       reduce using rule 38 (llamada -> ID llamadaEra L_PAREN fakebottom parm checkParamNum R_PAREN checkparentesis Gosub .)


state 265

    (57) parm2 -> COMMA expOr checkParam . parm2
    (57) parm2 -> . COMMA expOr checkParam parm2
    (58) parm2 -> . empty
    (88) empty -> .

    COMMA           shift and go to state 233
    R_PAREN         reduce using rule 88 (empty -> .)

    parm2                          shift and go to state 269
    empty                          shift and go to state 234

state 266

    (52) else_aux -> ELSE Goto . bloque end_if
    (26) bloque -> . L_BRACE estatuto_rep R_BRACE

    L_BRACE         shift and go to state 61

    bloque                         shift and go to state 270

state 267

    (54) repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .

    ID              reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    IF              reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    WRITE           reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    RETURN          reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    READ            reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    WHILE           reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)
    R_BRACE         reduce using rule 54 (repeticion -> WHILE addJump L_PAREN expOr R_PAREN GotoF DO bloque end_while .)


state 268

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum . cuadVarDim
    (130) cuadVarDim -> .

    EQUAL           reduce using rule 130 (cuadVarDim -> .)
    MULT            reduce using rule 130 (cuadVarDim -> .)
    DIV             reduce using rule 130 (cuadVarDim -> .)
    PLUS            reduce using rule 130 (cuadVarDim -> .)
    MINUS           reduce using rule 130 (cuadVarDim -> .)
    GT              reduce using rule 130 (cuadVarDim -> .)
    LT              reduce using rule 130 (cuadVarDim -> .)
    EQ              reduce using rule 130 (cuadVarDim -> .)
    LEQ             reduce using rule 130 (cuadVarDim -> .)
    GEQ             reduce using rule 130 (cuadVarDim -> .)
    AND             reduce using rule 130 (cuadVarDim -> .)
    OR              reduce using rule 130 (cuadVarDim -> .)
    R_PAREN         reduce using rule 130 (cuadVarDim -> .)
    COMMA           reduce using rule 130 (cuadVarDim -> .)
    SEMICOLON       reduce using rule 130 (cuadVarDim -> .)
    R_BRACKET       reduce using rule 130 (cuadVarDim -> .)

    cuadVarDim                     shift and go to state 271

state 269

    (57) parm2 -> COMMA expOr checkParam parm2 .

    R_PAREN         reduce using rule 57 (parm2 -> COMMA expOr checkParam parm2 .)


state 270

    (52) else_aux -> ELSE Goto bloque . end_if
    (109) end_if -> .

    ID              reduce using rule 109 (end_if -> .)
    IF              reduce using rule 109 (end_if -> .)
    WRITE           reduce using rule 109 (end_if -> .)
    RETURN          reduce using rule 109 (end_if -> .)
    READ            reduce using rule 109 (end_if -> .)
    WHILE           reduce using rule 109 (end_if -> .)
    R_BRACE         reduce using rule 109 (end_if -> .)

    end_if                         shift and go to state 272

state 271

    (87) var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .

    EQUAL           reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    MULT            reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    DIV             reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    PLUS            reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    MINUS           reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    GT              reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    LT              reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    EQ              reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    LEQ             reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    GEQ             reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    AND             reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    OR              reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    R_PAREN         reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    COMMA           reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    SEMICOLON       reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)
    R_BRACKET       reduce using rule 87 (var_dim -> ID stack_operand_id L_BRACKET verDim fakebottom expOr cuadVer R_BRACKET checkparentesis verDimNum cuadVarDim .)


state 272

    (52) else_aux -> ELSE Goto bloque end_if .

    ID              reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    IF              reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    WRITE           reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    RETURN          reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    READ            reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    WHILE           reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)
    R_BRACE         reduce using rule 52 (else_aux -> ELSE Goto bloque end_if .)

